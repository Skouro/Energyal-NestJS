var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"0.7.2","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","tokenizer":"default","documentStore":{"store":{"index.html":["amaz","angular","app","applic","author","backer","build","coverag","descript","develop","e2","effici","framework","grow","heavili","here","https://nestjs.com","index","inspir","instal","installrun","join","kamil","licens","match","mit","mode","more","myśliwiec","nest","nestframework","node.j","npm","open","pleas","product","progress","project","read","readm","repositori","result","run","scalabl","server","side","sourc","sponsor","start","start:dev","start:prodtest","starter","stay","support","test","test:covsupport","test:e2","thank","touch","twitter","typescript","unit","watch","websit","you'd"],"overview.html":["12","7","8","browser","class","inject","interfac","match","out","overview","reset","result","support","svg","zoom"],"modules.html":["match","modul","result"],"injectables/AppService.html":["appservic","boolean","case","check","class","config.isapiauthen","config/config","configservic","console.log('","constructor(config","export","file","gethello","hello","import","info","inject","isauthen","match","method","nestjs/common","note","pleas","privat","properti","result","return","sensit","servic","sourc","src/app.service.t","string","take","valido","world"],"injectables/DeleteBlankSpacePipe.html":["argumentmetadata","blank","class","const","deleteblankspacepip","export","file","implement","import","info","inject","interfaces/user.interfac","iuser","match","metadata","method","nestjs/common","pipetransform","result","return","sourc","space.pipe.t","src/pipes/delet","string","transform","transform(valu","typeof","v","valu","value[v","value[v].trim","void"],"injectables/ElectrodomesticService.html":["admin","async","await","catch(err","categori","categories.valu","class","const","constructor","constructor(@injectmodel('electrodomest","constructor(electrodomesticmodel","customexcept","customexception.clienterror('no","customexception.saveexceptio(reason","el","elect","electro.met","electro.us","electrodomesticmodel","electrodomesticschema","electrodomesticservic","electrodoméstico","encontrado","err","except","export","file","geton","getone(idelectro","getonooff","getonooff(seri","ha","httpexcept","httpstatu","ielectrodomest","ignor","imet","import","info","inject","injectmodel","interfaces/electrodomestic.interfac","interfaces/meter.interfac","match","meter","meter._id","meter/meter.servic","meterservic","method","model","models/electrodomestic.schema","mongoos","name","nestjs/common","nestjs/mongoos","new","newelctro","newelctro._id","newelctro.met","null","onoff","populate('users.us","privat","re","reason","regist","register(electro","res.onoff","res.sav","result","return","se","sourc","src/services/electrodomestic/electrodomestic.service.t","string","this.electrodomesticmodel(electro).save().catch(async","this.electrodomesticmodel.findbyid(id","this.electrodomesticmodel.findbyid(idelectro","this.electrodomesticmodel.findone({seri","this.meterservice.getone(electro.met","this.meterservice.owner(meter._id","this.meterservice.setelectrodomestic(newelctro._id","this.userservice.addelectrodomestic(electro.users[0].us","throw","ts","updateonoff","updateonoff(id","user","user/user.servic","userservic","utils/custom","void"],"injectables/EncryptPipe.html":["10","argumentmetadata","bcrypt","bcrypt.hashsync(valu","class","encryptpip","export","file","implement","import","info","inject","match","metadata","method","nestjs/common","pipetransform","result","return","sourc","src/pipes/encrypt.pipe.t","transform","transform(valu","void"],"injectables/MeasurementService.html":["1000","5","async","await","catch(reason","class","client","client.us","const","constructor","constructor(@injectmodel('measur","constructor(measurementmodel","customexcept","date","date().gettim","date(new","el","electrodomestic/electrodomestic.servic","electrodomesticservic","encontr","except","export","file","gateways/measurement.gateway","ha","ignor","imeasur","import","info","inject","injectmodel","insert","insert(measur","interfaces/measurment.interfac","kwh.servic","kwh/valu","match","measurement.endtim","measurement.endtime.sethours(measurement.endtime.gethour","measurement.interv","measurement.irm","measurement.kwh","measurement.met","measurement.starttim","measurement.starttime.sethours(measurement.starttime.gethour","measurement.valu","measurementgateway","measurementmodel","measurementservic","medidor","meter","meter._id","meter.electrodomest","meter.electrodomestic.voltag","meter/meter.servic","meterservic","method","model","mongoos","nestjs/common","nestjs/mongoos","new","newmeasur","newmeasurement.save().then(async","ningún","null","number","por","power","privat","promise.reject(customexception.clienterror('no","promise.reject(except","promise.resolve(result","re","reason","registrado","result","return","se","sido","socket","sourc","src/services/measurment/measurement.service.t","this.measurementmodel(measur","this.meterservice.getone(measurement.met","this.meterservice.getowner(meter.seri","this.socket.sendmeasurements(r","this.userservice.getone(client.us","this.valuekwhservice.get(user.stratum","ts","user","user/user.servic","userservic","usuario","utils/custom","valu","valuekwh","valuekwh.valu","valuekwhservic","void"],"injectables/MeterService.html":["403","500","_id","async","await","catch(reason","class","con","const","constructor","constructor(@injectmodel('met","constructor(metermodel","customexcept","customexception.clienterror('el","customexception.internalerror(err","customexception.noresults(`no","customexception.updateexceptio(err","de","deleteelectrodomest","deleteelectrodomestic(idmet","dispositivo","el","electrodomest","encontrado","err","error","es","except","exec((err","export","file","geton","getone(seri","getown","getowner(seri","ha","httpexcept","httpstatu","httpstatus.forbidden","httpstatus.internal_server_error","id","idelctro","idmetr","ignor","imet","import","info","inject","injectmodel","interfaces/meter.interfac","interfaces/user.interfac","iuser","match","medidor","meter","meter.electrodomest","metermodel","meterservic","method","model","mongoos","nestjs/common","nestjs/mongoos","new","newmet","newmeter.sav","null","otro","populate('electrodomest","privat","promis","promise.reject(except","promise.resolve(result","properti","owner(idmetr","propiedad","re","reason","reason.nam","regist","register(met","result","return","se","serial","setelectrodomest","setelectrodomestic(idelctro","sourc","src/services/meter/meter.service.t","statu","string","this.getone(nul","this.getone(serial).then(async","this.metermodel(met","this.metermodel.findbyid(id","this.metermodel.findon","this.metermodel.findoneandupd","throw","ts","user","usuario","utils/custom","valu","value['electrodomestic']['users'][0","void","voltag"],"injectables/ParameterService.html":["add","add(paramet","async","await","class","console.log(d","constructor","constructor(@injectmodel('paramet","constructor(parametermodel","date","dates.kwh","dates.money","dates.us","dto/parameter.dto","err","export","file","get(us","if(r","ignor","import","info","inject","injectmodel","joi","kwh","match","method","model","models/parameter.model","money","mongoos","nestjs/common","nestjs/mongoos","new","parameterdto","parametermodel","parameterservic","privat","re","res.save().then(valu","res['parameters'][dates.scal","result","return","scale","sourc","src/services/parameter/parameter.service.t","this.parametermodel(parameter).sav","this.parametermodel.findon","ts","updat","update(d","user","void"],"injectables/RoomService.html":["async","await","class","constructor","constructor(@injectmodel('room","constructor(roommodel","createroom","createroom(room","deleteroom","deleteroom(userid","dto/room.dto","export","file","ignor","import","info","inject","injectmodel","match","method","model","mongoos","nestjs/common","nestjs/mongoos","new","privat","result","return","room","roomdto","roommodel","roomservic","socket.io","sourc","src/services/room/room.service.t","this.roommodel(room).sav","this.roommodel.deleteon","ts","user","userid","void"],"injectables/StatsService.html":["0","5","_id","async","aux","auxmet","auxmeters.map((item","await","babel/typ","class","const","constructor","constructor(measurementmodel","data","date","div","electro.electrodomest","electrodomest","electrodomestic(start","electrodomestic/electrodomestic.servic","electrodomesticmodel","electrodomesticservic","end","end.gettim","endtim","error","export","fdatasyncsync","file","fs","global","global(start","gte","idmet","idselectro","ignor","imeasur","import","info","inject","injectmodel","injectmodel('electrodomest","injectmodel('measur","injectmodel('us","interfaces/measurment.interfac","item.met","j","joi","kwh","length","lte","match","measurementmodel","meter","metermodel","method","model","money","mongoos","nestjs/common","nestjs/mongoos","newexpress","number","observ","privat","result","return","rxj","sourc","src/services/stats/stats.service.t","start","start.gettim","starttim","statsservic","string","sumus","sumuser(us","this.electrodomesticmodel.find","this.measurementmodel.find","ts","user","user/user.servic","usermodel","userservic","util","valu","value.electrodomestics.map((electro","value.endtime.sethours(value.endtime.gethour","value.starttim","value.starttime.sethours(value.starttime.gethour","void"],"injectables/UserService.html":["400","_id","addelectrodomest","addelectrodomestic(idus","async","auxmet","auxmeters.map((item","await","bcrypt","bcrypt.comparesync(oldpassword","bcrypt.comparesync(user.password","challengpassword","challengpassword(idus","citi","class","const","constructor","constructor(@injectmodel('us","constructor(usermodel","contraseña","creat","create(us","createus","createuser.save().catch(reason","customexcept","customexception.saveexceptio(reason","electro","electro.electrodomest","electrodomest","electrodomesticmodel","email","emailexist","emailexist(email","emailexistence.check(email","encryptpip","encryptpipe().transform(newpassword","encryptpipe().transform(user.password","err","error","except","exec","exist","export","fals","file","findal","getelectrodomest","getelectrodomestics(idus","getmet","getmeters(us","geton","getone(id","httpexcept","httpstatu","httpstatus.bad_request","httpstatus.internal_server_error","httpstatus.unauthor","idelectro","idselectro","idus","ignor","import","incorrecta","inf","info","inject","injectmodel","injectmodel('electrodomest","interfaces/user.interfac","item.met","iuser","login","login(us","match","meter","method","model","mongoos","name","nestjs/common","nestjs/mongoos","new","newpassword","o","oldpassword","password","pipes/encrypt.pip","populate('electrodomestic').then(async","populate('electrodomestics.electrodomest","privat","promis","promise((resolv","re","reject","reject(new","res.electrodomestics.push","res.password","res.sav","res.save().then(valu","resolve(inf","resolve(r","result","return","role","socket.servic","socket/us","sourc","src/services/user/user.service.t","statu","stratum","this.electrodomesticmodel.find","this.usermodel(us","this.usermodel.find().exec","this.usermodel.findbyid(id","this.usermodel.findbyid(us","this.usermodel.findon","true","ts","user","user.email","user.password","userexist","userexist(email","usermodel","userservic","usersocketservic","usuario","utils/custom","valu","value.electrodomestics.map((electro","void","w"],"injectables/UserSocketService.html":["addsess","addsession(us","async","await","class","const","constructor","constructor(@injectmodel('socketus","constructor(socketusermodel","deletesess","deletesession(idsess","err","exec","export","file","idsess","ignor","import","info","inject","injectmodel","match","method","model","mongoos","name","nestjs/common","nestjs/mongoos","new","newsess","newsession.save(async","privat","re","result","return","room/room.servic","roomservic","sessionid","socket.service.t","socket/us","socketusermodel","sourc","src/services/us","string","this.roomservice.createroom","this.socketusermodel","this.socketusermodel.findoneanddelet","ts","user","usersocketservic","void"],"injectables/ValueKwhService.html":["async","await","class","constructor","constructor(@injectmodel('valuekwh","constructor(valuekwhmodel","export","file","get(stratum","ignor","import","info","inject","injectmodel","kwh.service.t","kwh/valu","match","method","model","mongoos","nestjs/common","nestjs/mongoos","new","privat","regist","register(valu","result","return","sourc","src/services/valu","stratum","this.valuekwhmodel(values).sav","this.valuekwhmodel.findon","ts","valuekwhmodel","valuekwhservic","void"],"classes/CustomException.html":["400","403","500","class","clienterror","clienterror(messag","customexcept","encontrado","err","err.nam","error","exception.t","export","file","getexecptio","getexecptio(err","ha","httpexcept","httpstatu","httpstatus.bad_request","httpstatus.forbidden","httpstatus.internal_server_error","import","info","internalerror","internalerror(error","match","messag","method","nestjs/common","new","noresult","noresults(messag","promise.reject(new","properti","re","result","return","saveexceptio","saveexceptio(err","se","servererror","sourc","src/utils/custom","static","statu","string","this.servererror(err","throw","updateexceptio","updateexceptio(err","void"],"classes/ElectrodomesticDto.html":["_id","acceso","admin","al","apagado","asignada","asignado","base","boolean","categori","categoria","clase","class","cual","da","dato","de","del","dentro","descript","documento","el","electrodomesticdto","electrodomestico","electrodoméstico","encendido","enum","estado","export","fabrica","file","funcionamiento","ha","id","idocu","implement","import","info","la","le","match","medidor","meter","mongo","name","nombr","onoff","para","pertenec","por","properti","pued","que","representar","result","role","serial","sobr","sourc","src/dto/electrodomestic.dto.t","statu","string","tener","tienen","un","user","usuario","voltag"],"classes/JsonWebToken.html":["401","async","class","decod","decoded.us","err","error","export","file","httpexcept","httpstatu","httpstatus.unauthor","import","info","jsonwebtoken","jwt","jwt.verify(token","match","method","nestjs/common","new","process.env.se","promis","result","return","sourc","src/utils/json","static","statu","string","throw","token","token.t","verifi","verify(token","válido","web"],"classes/MeasurmentDto.html":["_id","boolean","clase","class","comenz","consumido","corrient","costo","date","de","descript","efectiva","en","endtim","export","fecha","file","hora","idocu","implement","import","info","irm","kwh","la","match","measurmentdto","medición","medidor","meter","monetario","number","para","properti","que","realizo","representar","result","se","sourc","src/dto/measurment.dto.t","starttim","statu","string","una","valu","y"],"classes/MeterDto.html":["05b","20a","30a","_id","acs712elctr","boolean","class","electrodomest","enum","export","file","idocu","implement","import","info","match","meterdto","model","properti","result","serial","sourc","src/dto/meter.dto.t","statu","string","t"],"classes/ParameterDto.html":["_id","class","export","file","idocu","implement","import","info","kwh","match","money","number","parameterdto","properti","result","scale","sourc","src/dto/parameter.dto.t","string","user"],"classes/RoomDto.html":["_id","class","export","file","idocu","implement","import","info","match","name","properti","result","roomdto","sourc","src/dto/room.dto.t","string","user"],"classes/UserDto.html":["_id","array","boolean","citi","class","electrodomest","email","export","file","idocu","implement","import","info","match","name","password","properti","result","role","sourc","src/dto/user.dto.t","statu","string","userdto"],"interfaces/IDocument.html":["_id","asignada","base","boolean","dato","de","del","dentro","descript","documento","estado","export","file","id","idocu","info","interfac","la","match","mongo","por","properti","registro","representar","result","sourc","src/dto/idocument.t","statu","string","type","un"],"interfaces/IElectrodomestic.html":["_id","boolean","categori","export","file","ielectrodomest","import","info","interfac","iuser","match","meter","name","number","properti","result","rol","serial","sourc","src/interfaces/electrodomestic.interface.t","statu","string","type","user","user.interfac","voltag"],"interfaces/IMeasurment.html":["date","endtim","export","file","imeasur","info","interfac","interv","irm","kwh","match","meter","number","properti","result","sourc","src/interfaces/measurment.interface.t","starttim","string","type","valu"],"interfaces/IMeter.html":["_id","boolean","electrodomest","export","file","imet","info","interfac","match","model","properti","result","serial","sourc","src/interfaces/meter.interface.t","statu","string","type"],"interfaces/IUser.html":["_id","bogota","boolean","cali","ceja","citi","electrodomest","electrodomestic.interfac","email","enum","export","file","ielectrodomest","import","info","interfac","iuser","la","laceja","match","medellín","name","negro","password","properti","result","rosa","río","ríonegro","santa","santarosa","sourc","src/interfaces/user.interface.t","statu","string","type","yarum"],"interfaces/Model.html":["export","file","info","interfac","match","model","result","sourc","src/interfaces/model.interface.t"],"interfaces/UserSocket.html":["export","file","info","interfac","match","properti","result","sessionid","socket.interface.t","sourc","src/interfaces/us","string","type","user","usersocket"],"miscellaneous.html":["categori","ciudad","control","electrodomesticschema","gateway","match","measurementschema","meterschema","miscellan","model","parameterschema","result","role","roomschema","scale","servic","socketuserschema","urldb","userschema","usertyp","valuekwhschema","variabl"],"coverage.html":["0","0/0","0/1","0/10","0/2","0/3","0/5","0/6","0/7","0/8","10","100","2/2","6/8","75","9/9","appservic","blank","class","coverag","customexcept","deleteblankspacepip","document","electrodomesticdto","electrodomesticservic","encryptpip","exception.t","file","identifi","idocu","ielectrodomest","imeasur","imet","inject","interfac","iuser","jsonwebtoken","kwh.service.t","kwh/valu","match","measurementservic","measurmentdto","meterdto","meterservic","model","parameterdto","parameterservic","project","result","roomdto","roomservic","socket.interface.t","socket.service.t","socket/us","space.pipe.t","src/app.service.t","src/dto/electrodomestic.dto.t","src/dto/idocument.t","src/dto/measurment.dto.t","src/dto/meter.dto.t","src/dto/parameter.dto.t","src/dto/room.dto.t","src/dto/user.dto.t","src/interfaces/electrodomestic.interface.t","src/interfaces/measurment.interface.t","src/interfaces/meter.interface.t","src/interfaces/model.interface.t","src/interfaces/us","src/interfaces/user.interface.t","src/pipes/delet","src/pipes/encrypt.pipe.t","src/services/electrodomestic/electrodomestic.service.t","src/services/measurment/measurement.service.t","src/services/meter/meter.service.t","src/services/parameter/parameter.service.t","src/services/room/room.service.t","src/services/stats/stats.service.t","src/services/us","src/services/user/user.service.t","src/services/valu","src/utils/custom","src/utils/json","statement","statsservic","token.t","type","userdto","userservic","usersocket","usersocketservic","valuekwhservic","web"]},"length":32},"tokenStore":{"root":{"0":{"5":{"docs":{},"b":{"docs":{"classes/MeterDto.html":{"ref":"classes/MeterDto.html","tf":0.01818181818181818}}}},"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.021505376344086023},"coverage.html":{"ref":"coverage.html","tf":0.15286624203821655}},"/":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}},"1":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.025477707006369428}}},"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.03184713375796178}}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.01910828025477707}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.025477707006369428}}},"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}},"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.025477707006369428}}},"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}},"docs":{}}},"1":{"0":{"0":{"0":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.012269938650306749}}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.012738853503184714}}},"docs":{"injectables/EncryptPipe.html":{"ref":"injectables/EncryptPipe.html","tf":0.02702702702702703},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}},"2":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555}}},"docs":{}},"2":{"0":{"docs":{},"a":{"docs":{"classes/MeterDto.html":{"ref":"classes/MeterDto.html","tf":0.01818181818181818}}}},"docs":{},"/":{"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}},"docs":{}}},"3":{"0":{"docs":{},"a":{"docs":{"classes/MeterDto.html":{"ref":"classes/MeterDto.html","tf":0.01818181818181818}}}},"docs":{}},"4":{"0":{"0":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.010676156583629894},"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.0125}}},"1":{"docs":{"classes/JsonWebToken.html":{"ref":"classes/JsonWebToken.html","tf":0.02}}},"3":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015},"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.01875}}},"docs":{}},"docs":{}},"5":{"0":{"0":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015},"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.00625}}},"docs":{}},"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.012269938650306749},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.010752688172043012}}},"6":{"docs":{},"/":{"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}},"docs":{}}},"7":{"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555}}},"8":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555}}},"9":{"docs":{},"/":{"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}},"docs":{}}},"docs":{},"a":{"docs":{},"m":{"docs":{},"a":{"docs":{},"z":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}}}},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}}}}}}},"p":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":5.04},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.01098901098901099}}}}}}}},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}}}}},"x":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/DeleteBlankSpacePipe.html":{"ref":"injectables/DeleteBlankSpacePipe.html","tf":0.06521739130434782},"injectables/EncryptPipe.html":{"ref":"injectables/EncryptPipe.html","tf":0.08108108108108109}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.017543859649122806}}}}}},"d":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.005494505494505495}}}}},"d":{"docs":{"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.011363636363636364}},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.022727272727272728}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}},"i":{"docs":{},"c":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0071174377224199285}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.012048192771084338}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.024096385542168676}}}}}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.025157232704402517},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.03070175438596491},"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.022727272727272728},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.03333333333333333},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.03202846975088968},"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.024096385542168676},"injectables/ValueKwhService.html":{"ref":"injectables/ValueKwhService.html","tf":0.037037037037037035},"classes/JsonWebToken.html":{"ref":"classes/JsonWebToken.html","tf":0.02}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.01098901098901099},"interfaces/IDocument.html":{"ref":"interfaces/IDocument.html","tf":0.031746031746031744}}},"o":{"docs":{"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.01098901098901099}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.050314465408805034},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.03680981595092025},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.03070175438596491},"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.022727272727272728},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.03333333333333333},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.010752688172043012},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.03202846975088968},"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.03614457831325301},"injectables/ValueKwhService.html":{"ref":"injectables/ValueKwhService.html","tf":0.037037037037037035}}}}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.01098901098901099}}}}}},"s":{"7":{"1":{"2":{"docs":{},"e":{"docs":{},"l":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{"classes/MeterDto.html":{"ref":"classes/MeterDto.html","tf":0.05454545454545454}}}}}}}},"docs":{}},"docs":{}},"docs":{}}},"l":{"docs":{"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.01098901098901099}}}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}}}}},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{},"/":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506}}}}}}}}},"s":{"docs":{},"e":{"docs":{"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.01098901098901099},"interfaces/IDocument.html":{"ref":"interfaces/IDocument.html","tf":0.047619047619047616}}}}},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555}}}}}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.04},"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.02197802197802198},"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.013333333333333334},"classes/MeterDto.html":{"ref":"classes/MeterDto.html","tf":0.03636363636363636},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.03508771929824561},"interfaces/IDocument.html":{"ref":"interfaces/IDocument.html","tf":0.047619047619047616},"interfaces/IElectrodomestic.html":{"ref":"interfaces/IElectrodomestic.html","tf":0.036585365853658534},"interfaces/IMeter.html":{"ref":"interfaces/IMeter.html","tf":0.061224489795918366},"interfaces/IUser.html":{"ref":"interfaces/IUser.html","tf":0.03488372093023256}}}}}}},"g":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{"interfaces/IUser.html":{"ref":"interfaces/IUser.html","tf":0.023255813953488372}}}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"k":{"docs":{"injectables/DeleteBlankSpacePipe.html":{"ref":"injectables/DeleteBlankSpacePipe.html","tf":0.021739130434782608},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}},"c":{"docs":{},"r":{"docs":{},"y":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/EncryptPipe.html":{"ref":"injectables/EncryptPipe.html","tf":0.05405405405405406},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0071174377224199285}},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/EncryptPipe.html":{"ref":"injectables/EncryptPipe.html","tf":0.02702702702702703}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"(":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186},"coverage.html":{"ref":"coverage.html","tf":10.006369426751592}}}}}}},"n":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.008771929824561403}},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.02}}}}}}}}}}}}}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.02}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.04}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"'":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.02}}},"d":{"docs":{"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.011363636363636364}}}}}}}}}}},"t":{"docs":{"injectables/DeleteBlankSpacePipe.html":{"ref":"injectables/DeleteBlankSpacePipe.html","tf":0.021739130434782608},"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.012578616352201259},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.03680981595092025},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.013157894736842105},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.03763440860215054},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.014234875444839857},"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.012048192771084338}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015},"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.011363636363636364},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.016666666666666666},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.010752688172043012},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642},"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.012048192771084338},"injectables/ValueKwhService.html":{"ref":"injectables/ValueKwhService.html","tf":0.018518518518518517}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.02}}}}}}}},"@":{"docs":{},"i":{"docs":{},"n":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"(":{"docs":{},"'":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374}}}}}},"t":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.011363636363636364}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.016666666666666666}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}}}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.012048192771084338}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"k":{"docs":{},"w":{"docs":{},"h":{"docs":{"injectables/ValueKwhService.html":{"ref":"injectables/ValueKwhService.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.011363636363636364}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.016666666666666666}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.012048192771084338}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"k":{"docs":{},"w":{"docs":{},"h":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/ValueKwhService.html":{"ref":"injectables/ValueKwhService.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"o":{"docs":{"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.013333333333333334}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"ñ":{"docs":{},"a":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0071174377224199285}}}}}}},"o":{"docs":{},"l":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.045454545454545456}}}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"z":{"docs":{"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.02666666666666667}}}}}},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.013333333333333334}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.013333333333333334}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.02},"injectables/DeleteBlankSpacePipe.html":{"ref":"injectables/DeleteBlankSpacePipe.html","tf":0.021739130434782608},"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"injectables/EncryptPipe.html":{"ref":"injectables/EncryptPipe.html","tf":0.02702702702702703},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015},"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.011363636363636364},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.016666666666666666},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642},"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.012048192771084338},"injectables/ValueKwhService.html":{"ref":"injectables/ValueKwhService.html","tf":0.018518518518518517},"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":5.0125},"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":5.010989010989011},"classes/JsonWebToken.html":{"ref":"classes/JsonWebToken.html","tf":5.04},"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":5.013333333333334},"classes/MeterDto.html":{"ref":"classes/MeterDto.html","tf":5.036363636363636},"classes/ParameterDto.html":{"ref":"classes/ParameterDto.html","tf":5.045454545454546},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":5.0588235294117645},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":5.035087719298246},"coverage.html":{"ref":"coverage.html","tf":0.050955414012738856}}},"e":{"docs":{"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.01098901098901099},"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.013333333333333334}}}}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374}},".":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.00625}},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.0125}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.02}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015}}}}}}}}}}},"e":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.025157232704402517},"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.016483516483516484},"interfaces/IElectrodomestic.html":{"ref":"interfaces/IElectrodomestic.html","tf":0.036585365853658534},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.045454545454545456}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629}}}}}}}}},"a":{"docs":{"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.01098901098901099}}}}}}}}},"l":{"docs":{},"i":{"docs":{"interfaces/IUser.html":{"ref":"interfaces/IUser.html","tf":0.023255813953488372}}}}},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.02}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0071174377224199285}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642},"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":5.0125},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},"n":{"docs":{},"o":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629}}}},"e":{"docs":{},"l":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.008771929824561403}}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.008771929824561403}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"`":{"docs":{},"n":{"docs":{},"o":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.008771929824561403}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.01098901098901099}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.016666666666666666}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.03333333333333333}}}}}}}}}}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0071174377224199285}}}}},"u":{"docs":{},"s":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.05263157894736842},"interfaces/IUser.html":{"ref":"interfaces/IUser.html","tf":0.046511627906976744}}}},"u":{"docs":{},"d":{"docs":{},"a":{"docs":{},"d":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.045454545454545456}}}}}}},"e":{"docs":{},"j":{"docs":{},"a":{"docs":{"interfaces/IUser.html":{"ref":"interfaces/IUser.html","tf":0.011627906976744186}}}}}},"d":{"docs":{},"e":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.008771929824561403},"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.04395604395604396},"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.02666666666666667},"interfaces/IDocument.html":{"ref":"interfaces/IDocument.html","tf":0.09523809523809523}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186},"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.005494505494505495},"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.006666666666666667},"interfaces/IDocument.html":{"ref":"interfaces/IDocument.html","tf":0.015873015873015872}}}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}}}}}},"l":{"docs":{"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.01098901098901099},"interfaces/IDocument.html":{"ref":"interfaces/IDocument.html","tf":0.031746031746031744}},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"b":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"k":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/DeleteBlankSpacePipe.html":{"ref":"injectables/DeleteBlankSpacePipe.html","tf":5.043478260869565},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015}},"i":{"docs":{},"c":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.008771929824561403}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.016666666666666666}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.03333333333333333}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.012048192771084338}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.024096385542168676}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.01098901098901099},"interfaces/IDocument.html":{"ref":"interfaces/IDocument.html","tf":0.031746031746031744}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/JsonWebToken.html":{"ref":"classes/JsonWebToken.html","tf":0.02}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{"classes/JsonWebToken.html":{"ref":"classes/JsonWebToken.html","tf":0.02}}}}}}}}}}},"a":{"docs":{"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.01098901098901099}},"t":{"docs":{},"e":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.011363636363636364},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.05913978494623656},"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.02666666666666667},"interfaces/IMeasurment.html":{"ref":"interfaces/IMeasurment.html","tf":0.09523809523809523}},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374}}}}}},"s":{"docs":{},".":{"docs":{},"k":{"docs":{},"w":{"docs":{},"h":{"docs":{"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.011363636363636364}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.011363636363636364}}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.011363636363636364}}}}}}},"a":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506}}},"o":{"docs":{"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.01098901098901099},"interfaces/IDocument.html":{"ref":"interfaces/IDocument.html","tf":0.047619047619047616}}}}},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.008771929824561403}}}}}}}}}}},"v":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506}}}},"t":{"docs":{},"o":{"docs":{},"/":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.011363636363636364}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.016666666666666666}}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}},"o":{"docs":{"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.01098901098901099},"interfaces/IDocument.html":{"ref":"interfaces/IDocument.html","tf":0.015873015873015872}}}}}}}}}}},"e":{"2":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}},"docs":{},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.013333333333333334}}}}}}}}},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.02},"injectables/DeleteBlankSpacePipe.html":{"ref":"injectables/DeleteBlankSpacePipe.html","tf":0.021739130434782608},"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"injectables/EncryptPipe.html":{"ref":"injectables/EncryptPipe.html","tf":0.02702702702702703},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015},"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.011363636363636364},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.016666666666666666},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642},"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.012048192771084338},"injectables/ValueKwhService.html":{"ref":"injectables/ValueKwhService.html","tf":0.018518518518518517},"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.00625},"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.005494505494505495},"classes/JsonWebToken.html":{"ref":"classes/JsonWebToken.html","tf":0.02},"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.006666666666666667},"classes/MeterDto.html":{"ref":"classes/MeterDto.html","tf":0.01818181818181818},"classes/ParameterDto.html":{"ref":"classes/ParameterDto.html","tf":0.022727272727272728},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.029411764705882353},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.017543859649122806},"interfaces/IDocument.html":{"ref":"interfaces/IDocument.html","tf":0.015873015873015872},"interfaces/IElectrodomestic.html":{"ref":"interfaces/IElectrodomestic.html","tf":0.012195121951219513},"interfaces/IMeasurment.html":{"ref":"interfaces/IMeasurment.html","tf":0.015873015873015872},"interfaces/IMeter.html":{"ref":"interfaces/IMeter.html","tf":0.02040816326530612},"interfaces/IUser.html":{"ref":"interfaces/IUser.html","tf":0.023255813953488372},"interfaces/Model.html":{"ref":"interfaces/Model.html","tf":0.07692307692307693},"interfaces/UserSocket.html":{"ref":"interfaces/UserSocket.html","tf":0.034482758620689655}}}}}},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.024539877300613498},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.02631578947368421},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.00625},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642},"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.012048192771084338}},"(":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}}}}}},"l":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.017543859649122806},"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.03296703296703297}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.018867924528301886}},"r":{"docs":{},"o":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0071174377224199285}},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629}}}}},"u":{"docs":{},"s":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0071174377224199285},"classes/MeterDto.html":{"ref":"classes/MeterDto.html","tf":0.05454545454545454},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.07017543859649122},"interfaces/IMeter.html":{"ref":"interfaces/IMeter.html","tf":0.061224489795918366},"interfaces/IUser.html":{"ref":"interfaces/IUser.html","tf":0.03488372093023256}},"i":{"docs":{},"c":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.010752688172043012},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0071174377224199285}}}}}}},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.045454545454545456}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":5.012578616352202},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.026881720430107527},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}},"/":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.010752688172043012}}}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":5.010989010989011},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}},"o":{"docs":{"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.01098901098901099}}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"interfaces/IUser.html":{"ref":"interfaces/IUser.html","tf":0.011627906976744186}}}}}}}}}}}}}}}},"é":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.016483516483516484}}}}}}}}}}}}}}}}},"n":{"docs":{"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.04}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374}},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.008771929824561403},"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.00625}}}}}}}}},"r":{"docs":{},"y":{"docs":{},"p":{"docs":{},"t":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/EncryptPipe.html":{"ref":"injectables/EncryptPipe.html","tf":5.054054054054054},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"o":{"docs":{"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.01098901098901099}}}}}}}}},"d":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.026881720430107527}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506},"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.02},"interfaces/IMeasurment.html":{"ref":"interfaces/IMeasurment.html","tf":0.047619047619047616}}}}}},"u":{"docs":{},"m":{"docs":{"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.005494505494505495},"classes/MeterDto.html":{"ref":"classes/MeterDto.html","tf":0.01818181818181818},"interfaces/IUser.html":{"ref":"interfaces/IUser.html","tf":0.011627906976744186}}}}},"r":{"docs":{},"r":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.017543859649122806},"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.011363636363636364},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.02491103202846975},"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.012048192771084338},"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.06875},"classes/JsonWebToken.html":{"ref":"classes/JsonWebToken.html","tf":0.04}},"o":{"docs":{},"r":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.008771929824561403},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.010676156583629894},"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.05625},"classes/JsonWebToken.html":{"ref":"classes/JsonWebToken.html","tf":0.02}}}},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.00625}}}}}}}},"s":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.008771929824561403}},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.02197802197802198},"interfaces/IDocument.html":{"ref":"interfaces/IDocument.html","tf":0.031746031746031744}}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.017793594306049824},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.05263157894736842},"interfaces/IUser.html":{"ref":"interfaces/IUser.html","tf":0.03488372093023256}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0071174377224199285}},"(":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0071174377224199285}}}}}}}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.023255813953488372}}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.02},"injectables/DeleteBlankSpacePipe.html":{"ref":"injectables/DeleteBlankSpacePipe.html","tf":0.021739130434782608},"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"injectables/EncryptPipe.html":{"ref":"injectables/EncryptPipe.html","tf":0.02702702702702703},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015},"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.011363636363636364},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.016666666666666666},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642},"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.012048192771084338},"injectables/ValueKwhService.html":{"ref":"injectables/ValueKwhService.html","tf":0.018518518518518517},"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.00625},"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.005494505494505495},"classes/JsonWebToken.html":{"ref":"classes/JsonWebToken.html","tf":0.02},"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.006666666666666667},"classes/MeterDto.html":{"ref":"classes/MeterDto.html","tf":0.01818181818181818},"classes/ParameterDto.html":{"ref":"classes/ParameterDto.html","tf":0.022727272727272728},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.029411764705882353},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.017543859649122806},"interfaces/IDocument.html":{"ref":"interfaces/IDocument.html","tf":0.015873015873015872},"interfaces/IElectrodomestic.html":{"ref":"interfaces/IElectrodomestic.html","tf":0.012195121951219513},"interfaces/IMeasurment.html":{"ref":"interfaces/IMeasurment.html","tf":0.015873015873015872},"interfaces/IMeter.html":{"ref":"interfaces/IMeter.html","tf":0.02040816326530612},"interfaces/IUser.html":{"ref":"interfaces/IUser.html","tf":0.011627906976744186},"interfaces/Model.html":{"ref":"interfaces/Model.html","tf":0.07692307692307693},"interfaces/UserSocket.html":{"ref":"interfaces/UserSocket.html","tf":0.034482758620689655},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.010676156583629894}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506}}}}}}}}}}}}}},"s":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506}}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}}}},"b":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.01098901098901099}}}}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.01098901098901099}}}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.02666666666666667}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}}}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.06}}}}}}},"o":{"docs":{},"n":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0071174377224199285}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.012578616352201259}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.008771929824561403}}}}}}}},"o":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629}},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.012578616352201259}}}}}}}}}}}},"w":{"docs":{},"n":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.008771929824561403}}}}}}}}}}}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.022727272727272728}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"m":{"docs":{"injectables/ValueKwhService.html":{"ref":"injectables/ValueKwhService.html","tf":0.037037037037037035}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}},"i":{"docs":{},"c":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0071174377224199285}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.00625}},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.0125}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0071174377224199285}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.045454545454545456}},"s":{"docs":{},"/":{"docs":{},"m":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}}}}}},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.02}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"j":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642},"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.00625},"classes/JsonWebToken.html":{"ref":"classes/JsonWebToken.html","tf":0.02}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"b":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015},"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.01875}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642},"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.01875}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642},"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.01875}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642},"classes/JsonWebToken.html":{"ref":"classes/JsonWebToken.html","tf":0.02}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.017543859649122806},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.014234875444839857},"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.1},"classes/JsonWebToken.html":{"ref":"classes/JsonWebToken.html","tf":0.04}}}}}}}}}}},"a":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.008771929824561403},"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.00625},"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.01098901098901099}}},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.02666666666666667}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":5}}}}},"s":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}}}},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}},"l":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374}},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.012269938650306749}}}}}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":5.06},"injectables/DeleteBlankSpacePipe.html":{"ref":"injectables/DeleteBlankSpacePipe.html","tf":5.065217391304348},"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":5.018867924528302},"injectables/EncryptPipe.html":{"ref":"injectables/EncryptPipe.html","tf":5.081081081081081},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":5.0184049079754605},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":5.0131578947368425},"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":5.034090909090909},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":5.05},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":5.016129032258065},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":5.01067615658363},"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":5.036144578313253},"injectables/ValueKwhService.html":{"ref":"injectables/ValueKwhService.html","tf":5.055555555555555},"coverage.html":{"ref":"coverage.html","tf":0.07643312101910828}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015},"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.011363636363636364},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.016666666666666666},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642},"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.012048192771084338},"injectables/ValueKwhService.html":{"ref":"injectables/ValueKwhService.html","tf":0.018518518518518517}},"(":{"docs":{},"'":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.010752688172043012},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506}}}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"interfaces/IDocument.html":{"ref":"interfaces/IDocument.html","tf":5.031746031746032},"interfaces/IElectrodomestic.html":{"ref":"interfaces/IElectrodomestic.html","tf":5.024390243902439},"interfaces/IMeasurment.html":{"ref":"interfaces/IMeasurment.html","tf":5.031746031746032},"interfaces/IMeter.html":{"ref":"interfaces/IMeter.html","tf":5.040816326530612},"interfaces/IUser.html":{"ref":"interfaces/IUser.html","tf":5.023255813953488},"interfaces/Model.html":{"ref":"interfaces/Model.html","tf":5.153846153846154},"interfaces/UserSocket.html":{"ref":"interfaces/UserSocket.html","tf":5.068965517241379},"coverage.html":{"ref":"coverage.html","tf":0.044585987261146494}},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"injectables/DeleteBlankSpacePipe.html":{"ref":"injectables/DeleteBlankSpacePipe.html","tf":0.021739130434782608},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.00625}},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.0125}}}}}}}}}}}}}}}},"v":{"docs":{"interfaces/IMeasurment.html":{"ref":"interfaces/IMeasurment.html","tf":0.047619047619047616}}}}}},"f":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}},"o":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.02},"injectables/DeleteBlankSpacePipe.html":{"ref":"injectables/DeleteBlankSpacePipe.html","tf":0.021739130434782608},"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"injectables/EncryptPipe.html":{"ref":"injectables/EncryptPipe.html","tf":0.02702702702702703},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015},"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.011363636363636364},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.016666666666666666},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642},"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.012048192771084338},"injectables/ValueKwhService.html":{"ref":"injectables/ValueKwhService.html","tf":0.018518518518518517},"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.00625},"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.005494505494505495},"classes/JsonWebToken.html":{"ref":"classes/JsonWebToken.html","tf":0.02},"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.006666666666666667},"classes/MeterDto.html":{"ref":"classes/MeterDto.html","tf":0.01818181818181818},"classes/ParameterDto.html":{"ref":"classes/ParameterDto.html","tf":0.022727272727272728},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.029411764705882353},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.017543859649122806},"interfaces/IDocument.html":{"ref":"interfaces/IDocument.html","tf":0.015873015873015872},"interfaces/IElectrodomestic.html":{"ref":"interfaces/IElectrodomestic.html","tf":0.012195121951219513},"interfaces/IMeasurment.html":{"ref":"interfaces/IMeasurment.html","tf":0.015873015873015872},"interfaces/IMeter.html":{"ref":"interfaces/IMeter.html","tf":0.02040816326530612},"interfaces/IUser.html":{"ref":"interfaces/IUser.html","tf":0.011627906976744186},"interfaces/Model.html":{"ref":"interfaces/Model.html","tf":0.07692307692307693},"interfaces/UserSocket.html":{"ref":"interfaces/UserSocket.html","tf":0.034482758620689655}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0071174377224199285}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.04},"injectables/DeleteBlankSpacePipe.html":{"ref":"injectables/DeleteBlankSpacePipe.html","tf":0.043478260869565216},"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.05660377358490566},"injectables/EncryptPipe.html":{"ref":"injectables/EncryptPipe.html","tf":0.05405405405405406},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.06134969325153374},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.02631578947368421},"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.06818181818181818},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.08333333333333333},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.05913978494623656},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.03202846975088968},"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.04819277108433735},"injectables/ValueKwhService.html":{"ref":"injectables/ValueKwhService.html","tf":0.05555555555555555},"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.00625},"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.005494505494505495},"classes/JsonWebToken.html":{"ref":"classes/JsonWebToken.html","tf":0.04},"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.006666666666666667},"classes/MeterDto.html":{"ref":"classes/MeterDto.html","tf":0.01818181818181818},"classes/ParameterDto.html":{"ref":"classes/ParameterDto.html","tf":0.022727272727272728},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.029411764705882353},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.017543859649122806},"interfaces/IElectrodomestic.html":{"ref":"interfaces/IElectrodomestic.html","tf":0.012195121951219513},"interfaces/IUser.html":{"ref":"interfaces/IUser.html","tf":0.011627906976744186}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/DeleteBlankSpacePipe.html":{"ref":"injectables/DeleteBlankSpacePipe.html","tf":0.021739130434782608},"injectables/EncryptPipe.html":{"ref":"injectables/EncryptPipe.html","tf":0.02702702702702703},"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.005494505494505495},"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.006666666666666667},"classes/MeterDto.html":{"ref":"classes/MeterDto.html","tf":0.01818181818181818},"classes/ParameterDto.html":{"ref":"classes/ParameterDto.html","tf":0.022727272727272728},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.029411764705882353},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.017543859649122806}}}}}}}}},"e":{"docs":{},"t":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.012578616352201259},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.021929824561403508},"interfaces/IMeter.html":{"ref":"interfaces/IMeter.html","tf":5.040816326530612},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}},"a":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.018404907975460124},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.010752688172043012},"interfaces/IMeasurment.html":{"ref":"interfaces/IMeasurment.html","tf":5.031746031746032},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}},"s":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.06}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/DeleteBlankSpacePipe.html":{"ref":"injectables/DeleteBlankSpacePipe.html","tf":0.021739130434782608},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.017793594306049824},"interfaces/IElectrodomestic.html":{"ref":"interfaces/IElectrodomestic.html","tf":0.012195121951219513},"interfaces/IUser.html":{"ref":"interfaces/IUser.html","tf":5.023255813953488},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.025157232704402517},"interfaces/IElectrodomestic.html":{"ref":"interfaces/IElectrodomestic.html","tf":5.024390243902439},"interfaces/IUser.html":{"ref":"interfaces/IUser.html","tf":0.046511627906976744},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}}}}}},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015},"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.011363636363636364},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.016666666666666666},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.03225806451612903},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.010676156583629894},"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.012048192771084338},"injectables/ValueKwhService.html":{"ref":"injectables/ValueKwhService.html","tf":0.018518518518518517}}}}}},"d":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.013157894736842105},"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.02197802197802198},"interfaces/IDocument.html":{"ref":"interfaces/IDocument.html","tf":0.031746031746031744}},"e":{"docs":{},"l":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.010676156583629894}}}}}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.010752688172043012}},"r":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.021929824561403508}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.010752688172043012},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0071174377224199285}}}}}}}},"s":{"docs":{},"s":{"docs":{"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.04819277108433735}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.010676156583629894}}}},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.016483516483516484},"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.02},"classes/MeterDto.html":{"ref":"classes/MeterDto.html","tf":0.05454545454545454},"classes/ParameterDto.html":{"ref":"classes/ParameterDto.html","tf":0.06818181818181818},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.08823529411764706},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.05263157894736842},"interfaces/IDocument.html":{"ref":"interfaces/IDocument.html","tf":5.031746031746032},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}},"f":{"docs":{},"(":{"docs":{},"r":{"docs":{"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.011363636363636364}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}}}}}}}}},"r":{"docs":{},"m":{"docs":{"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.02},"interfaces/IMeasurment.html":{"ref":"interfaces/IMeasurment.html","tf":0.047619047619047616}}}}},"j":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.010752688172043012}},"o":{"docs":{},"i":{"docs":{"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.011363636363636364},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506}},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/JsonWebToken.html":{"ref":"classes/JsonWebToken.html","tf":5.06},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}}}},"w":{"docs":{},"t":{"docs":{"classes/JsonWebToken.html":{"ref":"classes/JsonWebToken.html","tf":0.02}},".":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/JsonWebToken.html":{"ref":"classes/JsonWebToken.html","tf":0.02}}}}}}}}}}}}}}}}}},"k":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}}}}},"w":{"docs":{},"h":{"docs":{"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.03409090909090909},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.010752688172043012},"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.03333333333333333},"classes/ParameterDto.html":{"ref":"classes/ParameterDto.html","tf":0.06818181818181818},"interfaces/IMeasurment.html":{"ref":"interfaces/IMeasurment.html","tf":0.047619047619047616}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/ValueKwhService.html":{"ref":"injectables/ValueKwhService.html","tf":0.018518518518518517},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}}},"/":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/ValueKwhService.html":{"ref":"injectables/ValueKwhService.html","tf":0.018518518518518517},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.03488372093023256}}}}}}},"e":{"docs":{"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.02197802197802198}},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.021505376344086023}}}}}}},"t":{"docs":{},"e":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506}}}},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0071174377224199285}}}}}}}}},"a":{"docs":{"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.02197802197802198},"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.10666666666666667},"interfaces/IDocument.html":{"ref":"interfaces/IDocument.html","tf":0.047619047619047616},"interfaces/IUser.html":{"ref":"interfaces/IUser.html","tf":0.011627906976744186}},"c":{"docs":{},"e":{"docs":{},"j":{"docs":{},"a":{"docs":{"interfaces/IUser.html":{"ref":"interfaces/IUser.html","tf":0.011627906976744186}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.023255813953488372},"overview.html":{"ref":"overview.html","tf":0.1111111111111111},"modules.html":{"ref":"modules.html","tf":0.4},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.04},"injectables/DeleteBlankSpacePipe.html":{"ref":"injectables/DeleteBlankSpacePipe.html","tf":0.043478260869565216},"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.012578616352201259},"injectables/EncryptPipe.html":{"ref":"injectables/EncryptPipe.html","tf":0.05405405405405406},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.012269938650306749},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.008771929824561403},"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.022727272727272728},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.03333333333333333},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.010752688172043012},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0071174377224199285},"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.024096385542168676},"injectables/ValueKwhService.html":{"ref":"injectables/ValueKwhService.html","tf":0.037037037037037035},"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.0125},"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.01098901098901099},"classes/JsonWebToken.html":{"ref":"classes/JsonWebToken.html","tf":0.04},"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.013333333333333334},"classes/MeterDto.html":{"ref":"classes/MeterDto.html","tf":0.03636363636363636},"classes/ParameterDto.html":{"ref":"classes/ParameterDto.html","tf":0.045454545454545456},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.058823529411764705},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.03508771929824561},"interfaces/IDocument.html":{"ref":"interfaces/IDocument.html","tf":0.031746031746031744},"interfaces/IElectrodomestic.html":{"ref":"interfaces/IElectrodomestic.html","tf":0.024390243902439025},"interfaces/IMeasurment.html":{"ref":"interfaces/IMeasurment.html","tf":0.031746031746031744},"interfaces/IMeter.html":{"ref":"interfaces/IMeter.html","tf":0.04081632653061224},"interfaces/IUser.html":{"ref":"interfaces/IUser.html","tf":0.023255813953488372},"interfaces/Model.html":{"ref":"interfaces/Model.html","tf":0.15384615384615385},"interfaces/UserSocket.html":{"ref":"interfaces/UserSocket.html","tf":0.06896551724137931},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.045454545454545456},"coverage.html":{"ref":"coverage.html","tf":0.012738853503184714}}}}}},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.023255813953488372}}},"s":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":10.022727272727273}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.023255813953488372}},"l":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.012578616352201259},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.012269938650306749},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.008771929824561403},"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.022727272727272728},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.03333333333333333},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.026881720430107527},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.010676156583629894},"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.024096385542168676},"injectables/ValueKwhService.html":{"ref":"injectables/ValueKwhService.html","tf":0.05555555555555555},"classes/MeterDto.html":{"ref":"classes/MeterDto.html","tf":0.10909090909090909},"interfaces/IMeter.html":{"ref":"interfaces/IMeter.html","tf":0.061224489795918366},"interfaces/Model.html":{"ref":"interfaces/Model.html","tf":5.153846153846154},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.09090909090909091},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}},"s":{"docs":{},"/":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.011363636363636364}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":10.2}}}}},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}}},"n":{"docs":{},"g":{"docs":{},"o":{"docs":{"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.01098901098901099},"interfaces/IDocument.html":{"ref":"interfaces/IDocument.html","tf":0.031746031746031744}},"o":{"docs":{},"s":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015},"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.011363636363636364},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.016666666666666666},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642},"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.012048192771084338},"injectables/ValueKwhService.html":{"ref":"injectables/ValueKwhService.html","tf":0.018518518518518517}}}}}},"e":{"docs":{},"y":{"docs":{"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.03409090909090909},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506},"classes/ParameterDto.html":{"ref":"classes/ParameterDto.html","tf":0.06818181818181818}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.013333333333333334}}}}}}}}}},"y":{"docs":{},"ś":{"docs":{},"l":{"docs":{},"i":{"docs":{},"w":{"docs":{},"i":{"docs":{},"e":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.02},"injectables/DeleteBlankSpacePipe.html":{"ref":"injectables/DeleteBlankSpacePipe.html","tf":0.021739130434782608},"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"injectables/EncryptPipe.html":{"ref":"injectables/EncryptPipe.html","tf":0.02702702702702703},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015},"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.011363636363636364},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.016666666666666666},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642},"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.012048192771084338},"injectables/ValueKwhService.html":{"ref":"injectables/ValueKwhService.html","tf":0.018518518518518517},"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.00625},"classes/JsonWebToken.html":{"ref":"classes/JsonWebToken.html","tf":0.02}}}}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/DeleteBlankSpacePipe.html":{"ref":"injectables/DeleteBlankSpacePipe.html","tf":0.043478260869565216},"injectables/EncryptPipe.html":{"ref":"injectables/EncryptPipe.html","tf":0.05405405405405406}}}}}}},"e":{"docs":{},"r":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.008771929824561403},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.016129032258064516},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.010676156583629894},"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.016483516483516484},"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.02},"interfaces/IElectrodomestic.html":{"ref":"interfaces/IElectrodomestic.html","tf":0.036585365853658534},"interfaces/IMeasurment.html":{"ref":"interfaces/IMeasurment.html","tf":0.047619047619047616}},".":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.008771929824561403}},"i":{"docs":{},"c":{"docs":{},".":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374}}}}}}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.031446540880503145},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.03067484662576687},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":5.008771929824562},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.045454545454545456}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.010752688172043012}}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"classes/MeterDto.html":{"ref":"classes/MeterDto.html","tf":5.036363636363636},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}},"a":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374}},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374}}}}}}},"r":{"docs":{},"m":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374}}}}},"k":{"docs":{},"w":{"docs":{},"h":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374}},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374}}}}}}},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.018404907975460124}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":5.012269938650307},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.045454545454545456}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":5.013333333333334},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.008771929824561403},"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.01098901098901099},"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.013333333333333334}}}}},"c":{"docs":{},"i":{"docs":{},"ó":{"docs":{},"n":{"docs":{"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.09333333333333334}}}}}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"í":{"docs":{},"n":{"docs":{"interfaces/IUser.html":{"ref":"interfaces/IUser.html","tf":0.023255813953488372}}}}}}}},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.03125}}}}}}}},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.03488372093023256}},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}}}}}}}}}},"j":{"docs":{},"s":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.02},"injectables/DeleteBlankSpacePipe.html":{"ref":"injectables/DeleteBlankSpacePipe.html","tf":0.021739130434782608},"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"injectables/EncryptPipe.html":{"ref":"injectables/EncryptPipe.html","tf":0.02702702702702703},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015},"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.011363636363636364},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.016666666666666666},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642},"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.012048192771084338},"injectables/ValueKwhService.html":{"ref":"injectables/ValueKwhService.html","tf":0.018518518518518517},"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.00625},"classes/JsonWebToken.html":{"ref":"classes/JsonWebToken.html","tf":0.02}}}}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"o":{"docs":{},"o":{"docs":{},"s":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015},"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.011363636363636364},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.016666666666666666},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642},"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.012048192771084338},"injectables/ValueKwhService.html":{"ref":"injectables/ValueKwhService.html","tf":0.018518518518518517}}}}}}}}}}}}}},"w":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.018404907975460124},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.013157894736842105},"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.011363636363636364},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.016666666666666666},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.017793594306049824},"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.012048192771084338},"injectables/ValueKwhService.html":{"ref":"injectables/ValueKwhService.html","tf":0.018518518518518517},"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.05},"classes/JsonWebToken.html":{"ref":"classes/JsonWebToken.html","tf":0.02}},"e":{"docs":{},"l":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.012578616352201259}},".":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629}}}}}}}}}}},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0071174377224199285}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.012048192771084338}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.012048192771084338}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{"interfaces/IUser.html":{"ref":"interfaces/IUser.html","tf":0.011627906976744186}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"j":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}}}}},"t":{"docs":{},"e":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.02}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.00625}},"s":{"docs":{},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.0125}}}}}}}}}}}}}}}},"m":{"docs":{},"b":{"docs":{},"r":{"docs":{"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.01098901098901099}}}}}},"p":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.08139534883720931}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0071174377224199285},"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.012048192771084338},"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.016483516483516484},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.08823529411764706},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.05263157894736842},"interfaces/IElectrodomestic.html":{"ref":"interfaces/IElectrodomestic.html","tf":0.036585365853658534},"interfaces/IUser.html":{"ref":"interfaces/IUser.html","tf":0.03488372093023256}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015}}}},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.016129032258064516},"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.04},"classes/ParameterDto.html":{"ref":"classes/ParameterDto.html","tf":0.09090909090909091},"interfaces/IElectrodomestic.html":{"ref":"interfaces/IElectrodomestic.html","tf":0.036585365853658534},"interfaces/IMeasurment.html":{"ref":"interfaces/IMeasurment.html","tf":0.19047619047619047}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"ú":{"docs":{},"n":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374}}}}}}}},"o":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0071174377224199285}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}}}},"u":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"overview.html":{"ref":"overview.html","tf":10.055555555555555}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.016483516483516484}}}}}},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.008771929824561403}}}}},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506}}}}}}},"l":{"docs":{},"d":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0071174377224199285}}}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.02}}}}}},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}}}}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.02},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015},"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.00625},"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.005494505494505495},"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.006666666666666667},"classes/MeterDto.html":{"ref":"classes/MeterDto.html","tf":0.01818181818181818},"classes/ParameterDto.html":{"ref":"classes/ParameterDto.html","tf":0.022727272727272728},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.029411764705882353},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.017543859649122806},"interfaces/IDocument.html":{"ref":"interfaces/IDocument.html","tf":0.015873015873015872},"interfaces/IElectrodomestic.html":{"ref":"interfaces/IElectrodomestic.html","tf":0.012195121951219513},"interfaces/IMeasurment.html":{"ref":"interfaces/IMeasurment.html","tf":0.015873015873015872},"interfaces/IMeter.html":{"ref":"interfaces/IMeter.html","tf":0.02040816326530612},"interfaces/IUser.html":{"ref":"interfaces/IUser.html","tf":0.011627906976744186},"interfaces/UserSocket.html":{"ref":"interfaces/UserSocket.html","tf":0.034482758620689655}}},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.008771929824561403}}}}}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.008771929824561403}}}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.008771929824561403},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.014234875444839857},"classes/JsonWebToken.html":{"ref":"classes/JsonWebToken.html","tf":0.02}},"e":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},"n":{"docs":{},"o":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.00625}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015}}}}}}}}}}}}}}}}},"(":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0071174377224199285}}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"v":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{"classes/JsonWebToken.html":{"ref":"classes/JsonWebToken.html","tf":0.02}}}}}}}}}}}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.04},"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.018867924528301886},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.03067484662576687},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015},"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.011363636363636364},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.016666666666666666},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.03225806451612903},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0071174377224199285},"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.024096385542168676},"injectables/ValueKwhService.html":{"ref":"injectables/ValueKwhService.html","tf":0.018518518518518517}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"injectables/DeleteBlankSpacePipe.html":{"ref":"injectables/DeleteBlankSpacePipe.html","tf":0.043478260869565216},"injectables/EncryptPipe.html":{"ref":"injectables/EncryptPipe.html","tf":0.05405405405405406}}}}}}}}}}},"s":{"docs":{},"/":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"r":{"docs":{},"y":{"docs":{},"p":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.008771929824561403}},"i":{"docs":{},"c":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.01098901098901099},"interfaces/IDocument.html":{"ref":"interfaces/IDocument.html","tf":0.031746031746031744}}},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.018404907975460124}}}}}},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.01098901098901099},"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.013333333333333334}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.03409090909090909},"classes/ParameterDto.html":{"ref":"classes/ParameterDto.html","tf":5.045454545454546},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.011363636363636364}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":5.0227272727272725},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.045454545454545456}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0071174377224199285},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.05263157894736842},"interfaces/IUser.html":{"ref":"interfaces/IUser.html","tf":0.03488372093023256}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.01098901098901099}}}}}}}}},"u":{"docs":{},"e":{"docs":{},"d":{"docs":{"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.005494505494505495}}}}}},"r":{"docs":{},"e":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.012578616352201259},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.018404907975460124},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.039473684210526314},"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.011363636363636364},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.021352313167259787},"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.012048192771084338},"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.0375}},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}},"m":{"docs":{"index.html":{"ref":"index.html","tf":5}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.008771929824561403}},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"o":{"docs":{"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.013333333333333334}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.01098901098901099},"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.013333333333333334},"interfaces/IDocument.html":{"ref":"interfaces/IDocument.html","tf":0.015873015873015872}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.023255813953488372},"overview.html":{"ref":"overview.html","tf":0.1111111111111111},"modules.html":{"ref":"modules.html","tf":0.4},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.04},"injectables/DeleteBlankSpacePipe.html":{"ref":"injectables/DeleteBlankSpacePipe.html","tf":0.043478260869565216},"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.012578616352201259},"injectables/EncryptPipe.html":{"ref":"injectables/EncryptPipe.html","tf":0.05405405405405406},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.03067484662576687},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.02631578947368421},"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.022727272727272728},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.03333333333333333},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.010752688172043012},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0071174377224199285},"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.024096385542168676},"injectables/ValueKwhService.html":{"ref":"injectables/ValueKwhService.html","tf":0.037037037037037035},"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.0125},"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.01098901098901099},"classes/JsonWebToken.html":{"ref":"classes/JsonWebToken.html","tf":0.04},"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.013333333333333334},"classes/MeterDto.html":{"ref":"classes/MeterDto.html","tf":0.03636363636363636},"classes/ParameterDto.html":{"ref":"classes/ParameterDto.html","tf":0.045454545454545456},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.058823529411764705},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.03508771929824561},"interfaces/IDocument.html":{"ref":"interfaces/IDocument.html","tf":0.031746031746031744},"interfaces/IElectrodomestic.html":{"ref":"interfaces/IElectrodomestic.html","tf":0.024390243902439025},"interfaces/IMeasurment.html":{"ref":"interfaces/IMeasurment.html","tf":0.031746031746031744},"interfaces/IMeter.html":{"ref":"interfaces/IMeter.html","tf":0.04081632653061224},"interfaces/IUser.html":{"ref":"interfaces/IUser.html","tf":0.023255813953488372},"interfaces/Model.html":{"ref":"interfaces/Model.html","tf":0.15384615384615385},"interfaces/UserSocket.html":{"ref":"interfaces/UserSocket.html","tf":0.06896551724137931},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.045454545454545456},"coverage.html":{"ref":"coverage.html","tf":0.012738853503184714}}}}},"e":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555}}}},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.012578616352201259}}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.011363636363636364},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.010676156583629894}}}}}}}}}}},"[":{"docs":{},"'":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"'":{"docs":{},"]":{"docs":{},"[":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.011363636363636364}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}}}}},"r":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.04},"injectables/DeleteBlankSpacePipe.html":{"ref":"injectables/DeleteBlankSpacePipe.html","tf":0.043478260869565216},"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.06289308176100629},"injectables/EncryptPipe.html":{"ref":"injectables/EncryptPipe.html","tf":0.05405405405405406},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.018404907975460124},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.05701754385964912},"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.056818181818181816},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.05},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.021505376344086023},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.07473309608540925},"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.024096385542168676},"injectables/ValueKwhService.html":{"ref":"injectables/ValueKwhService.html","tf":0.07407407407407407},"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.0625},"classes/JsonWebToken.html":{"ref":"classes/JsonWebToken.html","tf":0.06}}}}}},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015},"injectables/ValueKwhService.html":{"ref":"injectables/ValueKwhService.html","tf":0.018518518518518517}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.012578616352201259}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.008771929824561403}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ValueKwhService.html":{"ref":"injectables/ValueKwhService.html","tf":0.037037037037037035}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374}}}}},"o":{"docs":{"interfaces/IDocument.html":{"ref":"interfaces/IDocument.html","tf":0.031746031746031744}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0071174377224199285}},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.010676156583629894}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.06976744186046512}}}},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.016666666666666666}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.05},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":5.0588235294117645},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.016666666666666666}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":5.033333333333333},"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.060240963855421686},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.045454545454545456}}}}}}}},"/":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.012048192771084338}}}}}}}}}}}}}}}},"l":{"docs":{"interfaces/IElectrodomestic.html":{"ref":"interfaces/IElectrodomestic.html","tf":0.036585365853658534}},"e":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.010676156583629894},"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.01098901098901099},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.017543859649122806},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.045454545454545456}}}},"s":{"docs":{},"a":{"docs":{"interfaces/IUser.html":{"ref":"interfaces/IUser.html","tf":0.011627906976744186}}}}},"x":{"docs":{},"j":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506}}}},"í":{"docs":{},"o":{"docs":{"interfaces/IUser.html":{"ref":"interfaces/IUser.html","tf":0.011627906976744186}},"n":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{"interfaces/IUser.html":{"ref":"interfaces/IUser.html","tf":0.011627906976744186}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}}}},"e":{"docs":{"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.03409090909090909},"classes/ParameterDto.html":{"ref":"classes/ParameterDto.html","tf":0.06818181818181818},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.045454545454545456}}}}}},"e":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.008771929824561403},"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.00625},"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.02666666666666667}},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.01875}}}}}}}}},"i":{"docs":{},"c":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.02},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.045454545454545456}}}}},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.02631578947368421},"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.027472527472527472},"classes/MeterDto.html":{"ref":"classes/MeterDto.html","tf":0.05454545454545454},"interfaces/IElectrodomestic.html":{"ref":"interfaces/IElectrodomestic.html","tf":0.036585365853658534},"interfaces/IMeter.html":{"ref":"interfaces/IMeter.html","tf":0.061224489795918366}}}}}},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.02}}}}}},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015}},"i":{"docs":{},"c":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.008771929824561403}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.024096385542168676},"interfaces/UserSocket.html":{"ref":"interfaces/UserSocket.html","tf":0.10344827586206896}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}},"o":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.02},"injectables/DeleteBlankSpacePipe.html":{"ref":"injectables/DeleteBlankSpacePipe.html","tf":0.021739130434782608},"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"injectables/EncryptPipe.html":{"ref":"injectables/EncryptPipe.html","tf":0.02702702702702703},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015},"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.011363636363636364},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.016666666666666666},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642},"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.012048192771084338},"injectables/ValueKwhService.html":{"ref":"injectables/ValueKwhService.html","tf":0.018518518518518517},"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.00625},"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.005494505494505495},"classes/JsonWebToken.html":{"ref":"classes/JsonWebToken.html","tf":0.02},"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.006666666666666667},"classes/MeterDto.html":{"ref":"classes/MeterDto.html","tf":0.01818181818181818},"classes/ParameterDto.html":{"ref":"classes/ParameterDto.html","tf":0.022727272727272728},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.029411764705882353},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.017543859649122806},"interfaces/IDocument.html":{"ref":"interfaces/IDocument.html","tf":0.015873015873015872},"interfaces/IElectrodomestic.html":{"ref":"interfaces/IElectrodomestic.html","tf":0.012195121951219513},"interfaces/IMeasurment.html":{"ref":"interfaces/IMeasurment.html","tf":0.015873015873015872},"interfaces/IMeter.html":{"ref":"interfaces/IMeter.html","tf":0.02040816326530612},"interfaces/IUser.html":{"ref":"interfaces/IUser.html","tf":0.011627906976744186},"interfaces/Model.html":{"ref":"interfaces/Model.html","tf":0.07692307692307693},"interfaces/UserSocket.html":{"ref":"interfaces/UserSocket.html","tf":0.034482758620689655}}}}},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.012269938650306749}},".":{"docs":{},"i":{"docs":{},"o":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.016666666666666666}}},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/UserSocket.html":{"ref":"interfaces/UserSocket.html","tf":0.034482758620689655},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.012048192771084338},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}}},"/":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642},"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.012048192771084338},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.012048192771084338}}}}}}},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.045454545454545456}}}}}}}}}}}}}}}},"b":{"docs":{},"r":{"docs":{"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.005494505494505495}}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}}}}}},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/DeleteBlankSpacePipe.html":{"ref":"injectables/DeleteBlankSpacePipe.html","tf":0.021739130434782608},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.010752688172043012}},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.010752688172043012},"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.02},"interfaces/IMeasurment.html":{"ref":"interfaces/IMeasurment.html","tf":0.047619047619047616}}}}}}},"y":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}},"t":{"docs":{},"u":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.008771929824561403},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.010676156583629894},"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.0375},"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.016483516483516484},"classes/JsonWebToken.html":{"ref":"classes/JsonWebToken.html","tf":0.02},"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.02},"classes/MeterDto.html":{"ref":"classes/MeterDto.html","tf":0.05454545454545454},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.05263157894736842},"interfaces/IDocument.html":{"ref":"interfaces/IDocument.html","tf":0.047619047619047616},"interfaces/IElectrodomestic.html":{"ref":"interfaces/IElectrodomestic.html","tf":0.036585365853658534},"interfaces/IMeter.html":{"ref":"interfaces/IMeter.html","tf":0.061224489795918366},"interfaces/IUser.html":{"ref":"interfaces/IUser.html","tf":0.03488372093023256}}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":5.010752688172043},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}},"i":{"docs":{},"c":{"docs":{"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.0875},"classes/JsonWebToken.html":{"ref":"classes/JsonWebToken.html","tf":0.04}}}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.04},"injectables/DeleteBlankSpacePipe.html":{"ref":"injectables/DeleteBlankSpacePipe.html","tf":0.021739130434782608},"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.012578616352201259},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.017543859649122806},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.021505376344086023},"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.07228915662650602},"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.025},"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.07692307692307693},"classes/JsonWebToken.html":{"ref":"classes/JsonWebToken.html","tf":0.04},"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.02666666666666667},"classes/MeterDto.html":{"ref":"classes/MeterDto.html","tf":0.10909090909090909},"classes/ParameterDto.html":{"ref":"classes/ParameterDto.html","tf":0.13636363636363635},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.17647058823529413},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.21052631578947367},"interfaces/IDocument.html":{"ref":"interfaces/IDocument.html","tf":0.047619047619047616},"interfaces/IElectrodomestic.html":{"ref":"interfaces/IElectrodomestic.html","tf":0.25609756097560976},"interfaces/IMeasurment.html":{"ref":"interfaces/IMeasurment.html","tf":0.047619047619047616},"interfaces/IMeter.html":{"ref":"interfaces/IMeter.html","tf":0.24489795918367346},"interfaces/IUser.html":{"ref":"interfaces/IUser.html","tf":0.1744186046511628},"interfaces/UserSocket.html":{"ref":"interfaces/UserSocket.html","tf":0.20689655172413793}}}}},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"m":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642},"injectables/ValueKwhService.html":{"ref":"injectables/ValueKwhService.html","tf":0.018518518518518517}}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186},"overview.html":{"ref":"overview.html","tf":0.05555555555555555}}}}}}},"m":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506}}}}}}}}}}},"v":{"docs":{},"g":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555}}}},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.02},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}}}}}},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/DeleteBlankSpacePipe.html":{"ref":"injectables/DeleteBlankSpacePipe.html","tf":0.021739130434782608},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"r":{"docs":{},"y":{"docs":{},"p":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/EncryptPipe.html":{"ref":"injectables/EncryptPipe.html","tf":0.02702702702702703},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"/":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"/":{"docs":{},"m":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.011363636363636364},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.016666666666666666},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.012048192771084338},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ValueKwhService.html":{"ref":"injectables/ValueKwhService.html","tf":0.018518518518518517},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.00625},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"classes/JsonWebToken.html":{"ref":"classes/JsonWebToken.html","tf":0.02},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"/":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},".":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.005494505494505495},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.006666666666666667},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/MeterDto.html":{"ref":"classes/MeterDto.html","tf":0.01818181818181818},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/ParameterDto.html":{"ref":"classes/ParameterDto.html","tf":0.022727272727272728},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.029411764705882353},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.017543859649122806},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/IDocument.html":{"ref":"interfaces/IDocument.html","tf":0.015873015873015872},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/IElectrodomestic.html":{"ref":"interfaces/IElectrodomestic.html","tf":0.012195121951219513},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/IMeasurment.html":{"ref":"interfaces/IMeasurment.html","tf":0.015873015873015872},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/IMeter.html":{"ref":"interfaces/IMeter.html","tf":0.02040816326530612},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/Model.html":{"ref":"interfaces/Model.html","tf":0.07692307692307693},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"interfaces/UserSocket.html":{"ref":"interfaces/UserSocket.html","tf":0.034482758620689655},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/IUser.html":{"ref":"interfaces/IUser.html","tf":0.011627906976744186},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.00625}},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.0125}}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{"interfaces/IUser.html":{"ref":"interfaces/IUser.html","tf":0.011627906976744186}},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"a":{"docs":{"interfaces/IUser.html":{"ref":"interfaces/IUser.html","tf":0.011627906976744186}}}}}}}}}}},"t":{"docs":{"classes/MeterDto.html":{"ref":"classes/MeterDto.html","tf":0.05454545454545454}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.046511627906976744}},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}}}}}}}}}}},"e":{"2":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}},"docs":{}}}}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.005494505494505495}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}}}},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"a":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},"{":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"e":{"docs":{},"l":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},".":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015}}}}}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015}}}}}}}}},"o":{"docs":{},"n":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.008771929824561403}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374}}}}}}}}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}}}}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}}}}}}}}},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}}}},"u":{"docs":{},"s":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}}}}}}}}},"o":{"docs":{},"n":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.017793594306049824}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"m":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"r":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.012048192771084338}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.012048192771084338}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.0125}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"k":{"docs":{},"w":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"m":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{"injectables/ValueKwhService.html":{"ref":"injectables/ValueKwhService.html","tf":0.018518518518518517}}}}}}}}}}}}}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/ValueKwhService.html":{"ref":"injectables/ValueKwhService.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.008771929824561403}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.011363636363636364}}}}}}}}}}}}}}}}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.022727272727272728}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.016666666666666666}}}}}}}}}}}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.016666666666666666}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.012048192771084338}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.017543859649122806},"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.03125},"classes/JsonWebToken.html":{"ref":"classes/JsonWebToken.html","tf":0.02}}}}}},"o":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}}}},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/JsonWebToken.html":{"ref":"classes/JsonWebToken.html","tf":0.02}},".":{"docs":{},"t":{"docs":{"classes/JsonWebToken.html":{"ref":"classes/JsonWebToken.html","tf":0.02},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"interfaces/IDocument.html":{"ref":"interfaces/IDocument.html","tf":0.031746031746031744},"interfaces/IElectrodomestic.html":{"ref":"interfaces/IElectrodomestic.html","tf":0.0975609756097561},"interfaces/IMeasurment.html":{"ref":"interfaces/IMeasurment.html","tf":0.1111111111111111},"interfaces/IMeter.html":{"ref":"interfaces/IMeter.html","tf":0.10204081632653061},"interfaces/IUser.html":{"ref":"interfaces/IUser.html","tf":0.08139534883720931},"interfaces/UserSocket.html":{"ref":"interfaces/UserSocket.html","tf":0.06896551724137931},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}}}}}}},"o":{"docs":{},"f":{"docs":{"injectables/DeleteBlankSpacePipe.html":{"ref":"injectables/DeleteBlankSpacePipe.html","tf":0.021739130434782608}}}}}}},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.02}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"injectables/DeleteBlankSpacePipe.html":{"ref":"injectables/DeleteBlankSpacePipe.html","tf":0.021739130434782608},"injectables/EncryptPipe.html":{"ref":"injectables/EncryptPipe.html","tf":0.02702702702702703}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/DeleteBlankSpacePipe.html":{"ref":"injectables/DeleteBlankSpacePipe.html","tf":0.043478260869565216},"injectables/EncryptPipe.html":{"ref":"injectables/EncryptPipe.html","tf":0.05405405405405406}}}}}}}}}}}}}},"u":{"docs":{},"e":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}}}}},"s":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015},"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.011363636363636364},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.016666666666666666},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.03225806451612903},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.010676156583629894},"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.012048192771084338},"injectables/ValueKwhService.html":{"ref":"injectables/ValueKwhService.html","tf":0.018518518518518517}}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.01098901098901099}}}}}}}},"u":{"docs":{},"n":{"docs":{"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.02197802197802198},"interfaces/IDocument.html":{"ref":"interfaces/IDocument.html","tf":0.015873015873015872}},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}}},"a":{"docs":{"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.013333333333333334}}}},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.011363636363636364}},"e":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.012578616352201259}}}}}}}}}},"(":{"docs":{},"d":{"docs":{"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.022727272727272728}}}},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.00625}},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.0125}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.018867924528301886},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.017543859649122806},"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.045454545454545456},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.016666666666666666},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642},"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.03614457831325301},"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.02197802197802198},"classes/ParameterDto.html":{"ref":"classes/ParameterDto.html","tf":0.06818181818181818},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.08823529411764706},"interfaces/IElectrodomestic.html":{"ref":"interfaces/IElectrodomestic.html","tf":0.07317073170731707},"interfaces/UserSocket.html":{"ref":"interfaces/UserSocket.html","tf":0.10344827586206896}},"/":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.031446540880503145},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.03067484662576687},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.026881720430107527},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":5.00711743772242},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"interfaces/UserSocket.html":{"ref":"interfaces/UserSocket.html","tf":5.068965517241379},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642},"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":5.024096385542169},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.045454545454545456}}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.016666666666666666}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.010752688172043012},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}}}}}}},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}}}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"interfaces/IElectrodomestic.html":{"ref":"interfaces/IElectrodomestic.html","tf":0.012195121951219513}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}},"(":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0071174377224199285}}}}}}}}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":5.035087719298246},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.045454545454545456}}}}}}},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.008771929824561403},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0071174377224199285},"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.038461538461538464}}}}}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506}},"s":{"docs":{},"/":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.006289308176100629},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}}}}}}}}}}}}},"r":{"docs":{},"l":{"docs":{},"d":{"docs":{},"b":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.045454545454545456}}}}}}},"w":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.014234875444839857}},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}}}}},"e":{"docs":{},"b":{"docs":{"classes/JsonWebToken.html":{"ref":"classes/JsonWebToken.html","tf":0.02},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}}}}}},"o":{"docs":{},"r":{"docs":{},"l":{"docs":{},"d":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.02}}}}}}},"y":{"docs":{"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.02666666666666667}},"o":{"docs":{},"u":{"docs":{},"'":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.011627906976744186}}}}}},"a":{"docs":{},"r":{"docs":{},"u":{"docs":{},"m":{"docs":{"interfaces/IUser.html":{"ref":"interfaces/IUser.html","tf":0.023255813953488372}}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"overview.html":{"ref":"overview.html","tf":0.1111111111111111}}}}}},"v":{"docs":{"injectables/DeleteBlankSpacePipe.html":{"ref":"injectables/DeleteBlankSpacePipe.html","tf":0.021739130434782608}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"o":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.02}}}}},"u":{"docs":{"injectables/DeleteBlankSpacePipe.html":{"ref":"injectables/DeleteBlankSpacePipe.html","tf":0.043478260869565216},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0071174377224199285},"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.02},"interfaces/IMeasurment.html":{"ref":"interfaces/IMeasurment.html","tf":0.047619047619047616}},"e":{"docs":{},"[":{"docs":{},"v":{"docs":{"injectables/DeleteBlankSpacePipe.html":{"ref":"injectables/DeleteBlankSpacePipe.html","tf":0.043478260869565216}},"]":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/DeleteBlankSpacePipe.html":{"ref":"injectables/DeleteBlankSpacePipe.html","tf":0.021739130434782608}}}}}}}}},"'":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"'":{"docs":{},"]":{"docs":{},"[":{"docs":{},"'":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"'":{"docs":{},"]":{"docs":{},"[":{"0":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"w":{"docs":{},"h":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.03067484662576687},"injectables/ValueKwhService.html":{"ref":"injectables/ValueKwhService.html","tf":5.037037037037037},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.045454545454545456}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/ValueKwhService.html":{"ref":"injectables/ValueKwhService.html","tf":0.018518518518518517}}}}}}}}}},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0035587188612099642}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506}},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.022727272727272728}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/DeleteBlankSpacePipe.html":{"ref":"injectables/DeleteBlankSpacePipe.html","tf":0.021739130434782608},"injectables/ElectrodomesticService.html":{"ref":"injectables/ElectrodomesticService.html","tf":0.031446540880503145},"injectables/EncryptPipe.html":{"ref":"injectables/EncryptPipe.html","tf":0.02702702702702703},"injectables/MeasurementService.html":{"ref":"injectables/MeasurementService.html","tf":0.006134969325153374},"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.017543859649122806},"injectables/ParameterService.html":{"ref":"injectables/ParameterService.html","tf":0.03409090909090909},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.03333333333333333},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.016129032258064516},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.021352313167259787},"injectables/UserSocketService.html":{"ref":"injectables/UserSocketService.html","tf":0.024096385542168676},"injectables/ValueKwhService.html":{"ref":"injectables/ValueKwhService.html","tf":0.037037037037037035},"classes/CustomException.html":{"ref":"classes/CustomException.html","tf":0.025}}}},"l":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.008771929824561403},"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.027472527472527472},"interfaces/IElectrodomestic.html":{"ref":"interfaces/IElectrodomestic.html","tf":0.036585365853658534}}}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"classes/JsonWebToken.html":{"ref":"classes/JsonWebToken.html","tf":0.02}}},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/JsonWebToken.html":{"ref":"classes/JsonWebToken.html","tf":0.04}}}}}}}}}}}}},"á":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"o":{"docs":{"classes/JsonWebToken.html":{"ref":"classes/JsonWebToken.html","tf":0.02}}}}}}}},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/MeterService.html":{"ref":"injectables/MeterService.html","tf":0.0043859649122807015},"injectables/StatsService.html":{"ref":"injectables/StatsService.html","tf":0.005376344086021506},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.014234875444839857},"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.016483516483516484},"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.02},"classes/MeterDto.html":{"ref":"classes/MeterDto.html","tf":0.05454545454545454},"classes/ParameterDto.html":{"ref":"classes/ParameterDto.html","tf":0.06818181818181818},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.08823529411764706},"classes/UserDto.html":{"ref":"classes/UserDto.html","tf":0.05263157894736842},"interfaces/IDocument.html":{"ref":"interfaces/IDocument.html","tf":0.047619047619047616},"interfaces/IElectrodomestic.html":{"ref":"interfaces/IElectrodomestic.html","tf":0.036585365853658534},"interfaces/IMeter.html":{"ref":"interfaces/IMeter.html","tf":0.061224489795918366},"interfaces/IUser.html":{"ref":"interfaces/IUser.html","tf":0.03488372093023256}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{"classes/ElectrodomesticDto.html":{"ref":"classes/ElectrodomesticDto.html","tf":0.038461538461538464},"classes/MeasurmentDto.html":{"ref":"classes/MeasurmentDto.html","tf":0.04}}}}}},"length":1440},"corpusTokens":["0","0/0","0/1","0/10","0/2","0/3","0/5","0/6","0/7","0/8","05b","10","100","1000","12","2/2","20a","30a","400","401","403","5","500","6/8","7","75","8","9/9","_id","acceso","acs712elctr","add","add(paramet","addelectrodomest","addelectrodomestic(idus","addsess","addsession(us","admin","al","amaz","angular","apagado","app","applic","appservic","argumentmetadata","array","asignada","asignado","async","author","aux","auxmet","auxmeters.map((item","await","babel/typ","backer","base","bcrypt","bcrypt.comparesync(oldpassword","bcrypt.comparesync(user.password","bcrypt.hashsync(valu","blank","bogota","boolean","browser","build","cali","case","catch(err","catch(reason","categori","categoria","categories.valu","ceja","challengpassword","challengpassword(idus","check","citi","ciudad","clase","class","client","client.us","clienterror","clienterror(messag","comenz","con","config.isapiauthen","config/config","configservic","console.log('","console.log(d","const","constructor","constructor(@injectmodel('electrodomest","constructor(@injectmodel('measur","constructor(@injectmodel('met","constructor(@injectmodel('paramet","constructor(@injectmodel('room","constructor(@injectmodel('socketus","constructor(@injectmodel('us","constructor(@injectmodel('valuekwh","constructor(config","constructor(electrodomesticmodel","constructor(measurementmodel","constructor(metermodel","constructor(parametermodel","constructor(roommodel","constructor(socketusermodel","constructor(usermodel","constructor(valuekwhmodel","consumido","contraseña","control","corrient","costo","coverag","creat","create(us","createroom","createroom(room","createus","createuser.save().catch(reason","cual","customexcept","customexception.clienterror('el","customexception.clienterror('no","customexception.internalerror(err","customexception.noresults(`no","customexception.saveexceptio(reason","customexception.updateexceptio(err","da","data","date","date().gettim","date(new","dates.kwh","dates.money","dates.us","dato","de","decod","decoded.us","del","deleteblankspacepip","deleteelectrodomest","deleteelectrodomestic(idmet","deleteroom","deleteroom(userid","deletesess","deletesession(idsess","dentro","descript","develop","dispositivo","div","document","documento","dto/parameter.dto","dto/room.dto","e2","efectiva","effici","el","elect","electro","electro.electrodomest","electro.met","electro.us","electrodomest","electrodomestic(start","electrodomestic.interfac","electrodomestic/electrodomestic.servic","electrodomesticdto","electrodomesticmodel","electrodomestico","electrodomesticschema","electrodomesticservic","electrodoméstico","email","emailexist","emailexist(email","emailexistence.check(email","en","encendido","encontr","encontrado","encryptpip","encryptpipe().transform(newpassword","encryptpipe().transform(user.password","end","end.gettim","endtim","enum","err","err.nam","error","es","estado","except","exception.t","exec","exec((err","exist","export","fabrica","fals","fdatasyncsync","fecha","file","findal","framework","fs","funcionamiento","gateway","gateways/measurement.gateway","get(stratum","get(us","getelectrodomest","getelectrodomestics(idus","getexecptio","getexecptio(err","gethello","getmet","getmeters(us","geton","getone(id","getone(idelectro","getone(seri","getonooff","getonooff(seri","getown","getowner(seri","global","global(start","grow","gte","ha","heavili","hello","here","hora","httpexcept","https://nestjs.com","httpstatu","httpstatus.bad_request","httpstatus.forbidden","httpstatus.internal_server_error","httpstatus.unauthor","id","idelctro","idelectro","identifi","idmet","idmetr","idocu","idselectro","idsess","idus","ielectrodomest","if(r","ignor","imeasur","imet","implement","import","incorrecta","index","inf","info","inject","injectmodel","injectmodel('electrodomest","injectmodel('measur","injectmodel('us","insert","insert(measur","inspir","instal","installrun","interfac","interfaces/electrodomestic.interfac","interfaces/measurment.interfac","interfaces/meter.interfac","interfaces/user.interfac","internalerror","internalerror(error","interv","irm","isauthen","item.met","iuser","j","joi","join","jsonwebtoken","jwt","jwt.verify(token","kamil","kwh","kwh.servic","kwh.service.t","kwh/valu","la","laceja","le","length","licens","login","login(us","lte","match","measurement.endtim","measurement.endtime.sethours(measurement.endtime.gethour","measurement.interv","measurement.irm","measurement.kwh","measurement.met","measurement.starttim","measurement.starttime.sethours(measurement.starttime.gethour","measurement.valu","measurementgateway","measurementmodel","measurementschema","measurementservic","measurmentdto","medellín","medición","medidor","messag","metadata","meter","meter._id","meter.electrodomest","meter.electrodomestic.voltag","meter/meter.servic","meterdto","metermodel","meterschema","meterservic","method","miscellan","mit","mode","model","models/electrodomestic.schema","models/parameter.model","modul","monetario","money","mongo","mongoos","more","myśliwiec","name","negro","nest","nestframework","nestjs/common","nestjs/mongoos","new","newelctro","newelctro._id","newelctro.met","newexpress","newmeasur","newmeasurement.save().then(async","newmet","newmeter.sav","newpassword","newsess","newsession.save(async","ningún","node.j","nombr","noresult","noresults(messag","note","npm","null","number","o","observ","oldpassword","onoff","open","otro","out","overview","para","parameterdto","parametermodel","parameterschema","parameterservic","password","pertenec","pipes/encrypt.pip","pipetransform","pleas","populate('electrodomest","populate('electrodomestic').then(async","populate('electrodomestics.electrodomest","populate('users.us","por","power","privat","process.env.se","product","progress","project","promis","promise((resolv","promise.reject(customexception.clienterror('no","promise.reject(except","promise.reject(new","promise.resolve(result","properti","owner(idmetr","propiedad","pued","que","re","read","readm","realizo","reason","reason.nam","regist","register(electro","register(met","register(valu","registrado","registro","reject","reject(new","repositori","representar","res.electrodomestics.push","res.onoff","res.password","res.sav","res.save().then(valu","res['parameters'][dates.scal","reset","resolve(inf","resolve(r","result","return","rol","role","room","room/room.servic","roomdto","roommodel","roomschema","roomservic","rosa","run","rxj","río","ríonegro","santa","santarosa","saveexceptio","saveexceptio(err","scalabl","scale","se","sensit","serial","server","servererror","servic","sessionid","setelectrodomest","setelectrodomestic(idelctro","side","sido","sobr","socket","socket.interface.t","socket.io","socket.servic","socket.service.t","socket/us","socketusermodel","socketuserschema","sourc","space.pipe.t","sponsor","src/app.service.t","src/dto/electrodomestic.dto.t","src/dto/idocument.t","src/dto/measurment.dto.t","src/dto/meter.dto.t","src/dto/parameter.dto.t","src/dto/room.dto.t","src/dto/user.dto.t","src/interfaces/electrodomestic.interface.t","src/interfaces/measurment.interface.t","src/interfaces/meter.interface.t","src/interfaces/model.interface.t","src/interfaces/us","src/interfaces/user.interface.t","src/pipes/delet","src/pipes/encrypt.pipe.t","src/services/electrodomestic/electrodomestic.service.t","src/services/measurment/measurement.service.t","src/services/meter/meter.service.t","src/services/parameter/parameter.service.t","src/services/room/room.service.t","src/services/stats/stats.service.t","src/services/us","src/services/user/user.service.t","src/services/valu","src/utils/custom","src/utils/json","start","start.gettim","start:dev","start:prodtest","starter","starttim","statement","static","statsservic","statu","stay","stratum","string","sumus","sumuser(us","support","svg","t","take","tener","test","test:covsupport","test:e2","thank","this.electrodomesticmodel(electro).save().catch(async","this.electrodomesticmodel.find","this.electrodomesticmodel.findbyid(id","this.electrodomesticmodel.findbyid(idelectro","this.electrodomesticmodel.findone({seri","this.getone(nul","this.getone(serial).then(async","this.measurementmodel(measur","this.measurementmodel.find","this.metermodel(met","this.metermodel.findbyid(id","this.metermodel.findon","this.metermodel.findoneandupd","this.meterservice.getone(electro.met","this.meterservice.getone(measurement.met","this.meterservice.getowner(meter.seri","this.meterservice.owner(meter._id","this.meterservice.setelectrodomestic(newelctro._id","this.parametermodel(parameter).sav","this.parametermodel.findon","this.roommodel(room).sav","this.roommodel.deleteon","this.roomservice.createroom","this.servererror(err","this.socket.sendmeasurements(r","this.socketusermodel","this.socketusermodel.findoneanddelet","this.usermodel(us","this.usermodel.find().exec","this.usermodel.findbyid(id","this.usermodel.findbyid(us","this.usermodel.findon","this.userservice.addelectrodomestic(electro.users[0].us","this.userservice.getone(client.us","this.valuekwhmodel(values).sav","this.valuekwhmodel.findon","this.valuekwhservice.get(user.stratum","throw","tienen","token","token.t","touch","transform","transform(valu","true","ts","twitter","type","typeof","typescript","un","una","unit","updat","update(d","updateexceptio","updateexceptio(err","updateonoff","updateonoff(id","urldb","user","user.email","user.interfac","user.password","user/user.servic","userdto","userexist","userexist(email","userid","usermodel","userschema","userservic","usersocket","usersocketservic","usertyp","usuario","util","utils/custom","v","valido","valu","value.electrodomestics.map((electro","value.endtime.sethours(value.endtime.gethour","value.starttim","value.starttime.sethours(value.starttime.gethour","value['electrodomestic']['users'][0","value[v","value[v].trim","valuekwh","valuekwh.valu","valuekwhmodel","valuekwhschema","valuekwhservic","variabl","verifi","verify(token","void","voltag","válido","w","watch","web","websit","world","y","yarum","you'd","zoom"],"pipeline":["trimmer","stopWordFilter","stemmer"]},
    "store": {"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \n  \n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.          \nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development$ npm run start# watch mode$ npm run start:dev# production mode$ npm run start:prodTest\n# unit tests$ npm run test# e2e tests$ npm run test:e2e# test coverage$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \nOverview\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n    \n            \n                \n                    \n                        \n                        12 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        8 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        7 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\nModules\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     getHello\n                                \n                            \n            \n                            \n                                \n            getHello()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     string\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                    Private isAuthEnabled\n                                \n                            \n                            \n                                \n                                    isAuthEnabled:     boolean\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Injectable } from '@nestjs/common';\r\n// import { ConfigService } from './config/config-service';\r\n\r\n@Injectable()\r\nexport class AppService {\r\n  private isAuthEnabled: boolean;\r\n  //\r\n  // constructor(config: ConfigService) {\r\n  //   // Please take note that this check is case sensitive!\r\n  //   if (config.isApiAuthEnabled) {\r\n  //     console.log('es valido');\r\n  //   }\r\n  // }\r\n\r\n  getHello(): string {\r\n    return 'Hello World!';\r\n  }\r\n}\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteBlankSpacePipe.html":{"url":"injectables/DeleteBlankSpacePipe.html","title":"injectable - DeleteBlankSpacePipe","body":"\n                   \n\n\n\n\n\n  Injectables\n  DeleteBlankSpacePipe\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/pipes/delete-blank-space.pipe.ts\n        \n\n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     transform\n                                \n                            \n            \n                            \n                                \n            transform(value: any, metadata: ArgumentMetadata)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { ArgumentMetadata, Injectable, PipeTransform } from '@nestjs/common';\r\nimport { IUser } from '../interfaces/user.interface';\r\n\r\n@Injectable()\r\nexport class DeleteBlankSpacePipe implements PipeTransform {\r\n  transform(value: any, metadata?: ArgumentMetadata) {\r\n    for (const v in value) {\r\n      if (typeof value[v] == 'string') {\r\n        value[v] = value[v].trim();\r\n      }\r\n    }\r\n    return value;\r\n  }\r\n}\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ElectrodomesticService.html":{"url":"injectables/ElectrodomesticService.html","title":"injectable - ElectrodomesticService","body":"\n                   \n\n\n\n\n\n  Injectables\n  ElectrodomesticService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/electrodomestic/electrodomestic.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(electrodomesticModel: any, meterService: MeterService, userService: UserService)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     register\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    register(electro: IElectrodomestic, user: String)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getOne\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getOne(idElectro: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     category\n                                \n                            \n            \n                            \n                                \n            category()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateOnOff\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    updateOnOff(id: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getOnoOff\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getOnoOff(serial: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\r\nimport { Model } from 'mongoose';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport { MeterService } from '../meter/meter.service';\r\nimport { IElectrodomestic } from '../../interfaces/electrodomestic.interface';\r\nimport { IMeter } from '../../interfaces/meter.interface';\r\nimport { CustomException } from '../../utils/custom-exception';\r\nimport { UserService } from '../user/user.service';\r\nimport { ElectrodomesticSchema, categories } from '../../models/electrodomestic.schema';\r\n\r\n@Injectable()\r\nexport class ElectrodomesticService {\r\n  // @ts-ignore\r\n  constructor(@InjectModel('Electrodomestic') private electrodomesticModel: Model,\r\n              private meterService: MeterService,\r\n              private  userService: UserService) {\r\n  }\r\n\r\n  async register(electro: IElectrodomestic, user: String) {\r\n    const meter: IMeter = await this.meterService.getOne(electro.meter);\r\n    electro.meter = meter._id;\r\n    electro.users = [{ user }];\r\n    await this.meterService.owner(meter._id);\r\n    const newElctro: IElectrodomestic = await new this.electrodomesticModel(electro).save().catch(async reason => {\r\n      await CustomException.saveExceptio(reason);\r\n    });\r\n    await this.meterService.setElectrodomestic(newElctro._id, newElctro.meter);\r\n    this.userService.addElectrodomestic(electro.users[0].user, newElctro._id, 'ADMIN');\r\n    return newElctro;\r\n  }\r\n\r\n  async getOne(idElectro) {\r\n    return await this.electrodomesticModel.findById(idElectro)\r\n      .populate('users.user', 'name')\r\n      .catch(err => {\r\n        throw CustomException.clientError('No se ha encontrado el electrodoméstico');\r\n      });\r\n  }\r\n\r\n  category() {\r\n    return categories.values;\r\n  }\r\n\r\n  async updateOnOff(id) {\r\n    let elect = null;\r\n    await this.electrodomesticModel.findById(id, (err, res) => {\r\n      res.onOff = !res.onOff;\r\n      elect = res;\r\n      res.save();\r\n    });\r\n    return elect;\r\n  }\r\n\r\n  async getOnoOff(serial) {\r\n    return await this.electrodomesticModel.findOne({serial}, 'onOff');\r\n  }\r\n}\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EncryptPipe.html":{"url":"injectables/EncryptPipe.html","title":"injectable - EncryptPipe","body":"\n                   \n\n\n\n\n\n  Injectables\n  EncryptPipe\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/pipes/encrypt.pipe.ts\n        \n\n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     transform\n                                \n                            \n            \n                            \n                                \n            transform(value: any, metadata: ArgumentMetadata)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { ArgumentMetadata, Injectable, PipeTransform } from '@nestjs/common';\r\nimport  * as bcrypt from 'bcrypt';\r\n\r\n@Injectable()\r\nexport class EncryptPipe implements PipeTransform {\r\n  transform(value: any, metadata?: ArgumentMetadata) {\r\n   return bcrypt.hashSync(value, 10);\r\n  }\r\n}\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MeasurementService.html":{"url":"injectables/MeasurementService.html","title":"injectable - MeasurementService","body":"\n                   \n\n\n\n\n\n  Injectables\n  MeasurementService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/measurment/measurement.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(measurementModel: any, meterService: MeterService, socket: MeasurementGateway, userService: UserService, valueKwhService: ValueKwhService)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     insert\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    insert(measurement: IMeasurment)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@nestjs/common';\r\nimport { MeterService } from '../meter/meter.service';\r\nimport { Model } from 'mongoose';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport { IMeasurment } from '../../interfaces/measurment.interface';\r\nimport { CustomException } from '../../utils/custom-exception';\r\nimport { MeasurementGateway } from '../../gateways/measurement.gateway';\r\nimport { UserService } from '../user/user.service';\r\nimport { ValueKwhService } from '../value-kwh/value-kwh.service';\r\nimport { ElectrodomesticService } from '../electrodomestic/electrodomestic.service';\r\n\r\n@Injectable()\r\nexport class MeasurementService {\r\n  // @ts-ignore\r\n  constructor(@InjectModel('Measurement') private measurementModel: Model,\r\n              private meterService: MeterService,\r\n              private  socket: MeasurementGateway,\r\n              private userService: UserService,\r\n              private valueKwhService: ValueKwhService,\r\n) {\r\n  }\r\n\r\n  async insert(measurement: IMeasurment) {\r\n    measurement.endTime = new Date();\r\n    measurement.startTime = new Date(new Date().getTime() - measurement.interval);\r\n    measurement.endTime.setHours(measurement.endTime.getHours() - 5);\r\n    measurement.startTime.setHours(measurement.startTime.getHours() - 5);\r\n    let result;\r\n    let exception;\r\n    const meter = await this.meterService.getOne(measurement.meter);\r\n    if (!meter.electrodomestic) {\r\n      return Promise.reject(CustomException.clientError('No ha sido registrado por ningún usuario'));\r\n    }\r\n    const client = await this.meterService.getOwner(meter.serial);\r\n    const user = await this.userService.getOne(client.user);\r\n    const valueKwh = await this.valueKwhService.get(user.stratum);\r\n    measurement.meter = meter._id;\r\n    const power: number = meter.electrodomestic.voltage * measurement.irms;\r\n    measurement.kwh = power / 1000;\r\n    measurement.value = (power / 1000) * valueKwh.value;\r\n    const newMeasurement = new this.measurementModel(measurement);\r\n    await newMeasurement.save().then(async (res) => {\r\n      if (!res) {\r\n        exception = 'No se encontró el medidor';\r\n      }\r\n      this.socket.sendMeasurements(res, client.user);\r\n      result = res;\r\n    }).catch(reason => {\r\n      exception = reason;\r\n    });\r\n    return await result == null ? Promise.reject(exception) : Promise.resolve(result);\r\n  }\r\n}\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MeterService.html":{"url":"injectables/MeterService.html","title":"injectable - MeterService","body":"\n                   \n\n\n\n\n\n  Injectables\n  MeterService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/meter/meter.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(meterModel: any)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     register\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    register(meter: IMeter)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getOne\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getOne(serial: string, id: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setElectrodomestic\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    setElectrodomestic(idELctro: any, idMetre: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     owner\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    owner(idMetre: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getOwner\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getOwner(serial: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     deleteElectrodomestic\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    deleteElectrodomestic(idMeter: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\r\nimport { Model } from 'mongoose';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport { IMeter } from '../../interfaces/meter.interface';\r\nimport { IUser } from '../../interfaces/user.interface';\r\nimport { CustomException } from '../../utils/custom-exception';\r\n\r\n@Injectable()\r\nexport class MeterService {\r\n  // @ts-ignore\r\n  constructor(@InjectModel('Meter') private meterModel: Model) {\r\n  }\r\n\r\n  async register(meter: IMeter): Promise {\r\n    const newMeter = new this.meterModel(meter);\r\n    return await newMeter.save()\r\n      .catch(reason => {\r\n        if (reason.name) {\r\n          throw new HttpException({\r\n            status: HttpStatus.FORBIDDEN,\r\n            error: reason,\r\n          }, 403);\r\n        }\r\n        throw new HttpException({\r\n          status: HttpStatus.INTERNAL_SERVER_ERROR,\r\n          error: reason,\r\n        }, 500);\r\n      });\r\n  }\r\n\r\n  async getOne(serial?: string, id?: string): Promise {\r\n    let result;\r\n    let exception: HttpException;\r\n    if (serial) {\r\n      await this.meterModel.findOne({ serial }, (err, res) => {\r\n        if (!res) {\r\n          exception = CustomException.noResults(`No se ha encontrado el medidor con el serial ${serial}`);\r\n        } else if (err) {\r\n          exception = CustomException.internalError(err);\r\n        }\r\n        result = res;\r\n      }).populate('electrodomestic', 'users voltage');\r\n    }\r\n    if (id) {\r\n      return await this.meterModel.findById(id, async (err, res) => {\r\n        if (!res) {\r\n          exception = CustomException.noResults(`No se ha encontrado el medidor con el serial ${serial}`);\r\n        } else if (err) {\r\n          exception = CustomException.internalError(err);\r\n        }\r\n        result = res;\r\n      }).populate('electrodomestic', 'voltage');\r\n    }\r\n    return result == null ? Promise.reject(exception) : Promise.resolve(result);\r\n  }\r\n\r\n  async setElectrodomestic(idELctro, idMetre) {\r\n    const meter: IMeter = await this.getOne(null, idMetre);\r\n    if (meter.electrodomestic) {\r\n      throw  CustomException.clientError('El dispositivo es propiedad de otro usuario');\r\n    }\r\n    return await this.meterModel.findOneAndUpdate({ _id: idMetre }, { electrodomestic: idELctro })\r\n      .exec((err, res) => {\r\n        CustomException.updateExceptio(err, res);\r\n        return res;\r\n      });\r\n  }\r\n\r\n  async owner(idMetre) {\r\n    const meter: IMeter = await this.getOne(null, idMetre);\r\n    if (meter.electrodomestic) {\r\n      throw  CustomException.clientError('El dispositivo es propiedad de otro usuario');\r\n    }\r\n  }\r\n\r\n  async getOwner(serial) {\r\n    let user;\r\n    await this.getOne(serial).then(async value => {\r\n      user = value['electrodomestic']['users'][0];\r\n    });\r\n    return user;\r\n  }\r\n\r\n  async deleteElectrodomestic(idMeter) {\r\n    return this.meterModel.findOneAndUpdate({});\r\n  }\r\n}\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParameterService.html":{"url":"injectables/ParameterService.html","title":"injectable - ParameterService","body":"\n                   \n\n\n\n\n\n  Injectables\n  ParameterService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/parameter/parameter.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(parameterModel: any)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     add\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    add(parameter: ParameterDto)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     update\n                                \n                            \n            \n                            \n                                \n            update(dates: { user: any; scale: any; kwh: any; money: any; })\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     get\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    get(user: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@nestjs/common';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport { Model } from 'mongoose';\r\nimport { ParameterDto } from '../../dto/parameter.dto';\r\nimport { scales } from '../../models/parameter.model';\r\nimport { date } from 'joi';\r\n\r\n@Injectable()\r\nexport class ParameterService {\r\n  // @ts-ignore\r\n  constructor(@InjectModel('Parameter') private parameterModel: Model) {\r\n  }\r\n\r\n  async add(parameter: ParameterDto) {\r\n    return await new this.parameterModel(parameter).save();\r\n  }\r\n\r\n  update(dates: { user, scale, kwh, money }) {\r\n    console.log(dates);\r\n    this.parameterModel.findOne({ user: dates.user }, ((err, res) => {\r\n      if(res){\r\n        res['parameters'][dates.scale] = {\r\n          kwh: dates.kwh,\r\n          money: dates.money,\r\n        };\r\n        res.save().then(value => {\r\n        });\r\n      }\r\n    }));\r\n  }\r\n\r\n  async get(user) {\r\n    return await this.parameterModel.findOne({ user });\r\n  }\r\n}\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoomService.html":{"url":"injectables/RoomService.html","title":"injectable - RoomService","body":"\n                   \n\n\n\n\n\n  Injectables\n  RoomService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/room/room.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(roomModel: any)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     createRoom\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    createRoom(room: RoomDto)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     deleteRoom\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    deleteRoom(userId: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@nestjs/common';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport { Model } from 'mongoose';\r\nimport { RoomDto } from '../../dto/room.dto';\r\nimport { Room } from 'socket.io';\r\n\r\n@Injectable()\r\nexport class RoomService {\r\n\r\n  // @ts-ignore\r\n  constructor(@InjectModel('Room') private roomModel: Model) {\r\n  }\r\n\r\n  async createRoom(room: RoomDto) {\r\n    await new this.roomModel(room).save();\r\n  }\r\n\r\n  async deleteRoom(userId) {\r\n    return await this.roomModel.deleteOne({ user: userId });\r\n  }\r\n}\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatsService.html":{"url":"injectables/StatsService.html","title":"injectable - StatsService","body":"\n                   \n\n\n\n\n\n  Injectables\n  StatsService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/stats/stats.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(measurementModel: any, userModel: any, electrodomesticModel: any, meterModel: any, electrodomesticService: ElectrodomesticService, userService: UserService)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     electrodomestic\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    electrodomestic(start: Date, end: Date, idMeter: string, length: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     global\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    global(start: Date, end: Date, user: string, length: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     sumUser\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    sumUser(user: string, start: Date, end: Date)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@nestjs/common';\r\nimport { Model } from 'mongoose';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport { NewExpression } from '@babel/types';\r\nimport { Observable } from 'rxjs';\r\nimport { date } from 'joi';\r\nimport { IMeasurment } from '../../interfaces/measurment.interface';\r\nimport { fdatasyncSync } from 'fs';\r\nimport { ElectrodomesticService } from '../electrodomestic/electrodomestic.service';\r\nimport { error } from 'util';\r\nimport { UserService } from '../user/user.service';\r\n\r\n@Injectable()\r\nexport class StatsService {\r\n// @ts-ignore\r\n  constructor(\r\n    // @ts-ignore\r\n    @InjectModel('Measurement') private measurementModel: Model,\r\n    // @ts-ignore\r\n    @InjectModel('User') private userModel: Model,\r\n    // @ts-ignore\r\n    @InjectModel('Electrodomestic') private electrodomesticModel: Model,\r\n    // @ts-ignore\r\n    @InjectModel('Electrodomestic') private meterModel: Model,\r\n    private electrodomesticService: ElectrodomesticService,\r\n    private userService: UserService,\r\n  ) {\r\n  }\r\n\r\n  // @ts-ignore\r\n  async electrodomestic(start: Date, end: Date, idMeter: string, length: number) {\r\n    const kWh = [];\r\n    const money = [];\r\n    for (let i = 0; i  {\r\n        const idsElectro = value.electrodomestics.map((electro) => electro.electrodomestic);\r\n        const auxMeters = await this.electrodomesticModel.find({ _id: { $in: idsElectro } });\r\n        meters = auxMeters.map((item) => item.meter);\r\n      });\r\n    const data: [IMeasurment] = await this.measurementModel.find({\r\n      meter: { $in: meters },\r\n      startTime: { $gte: start, $lte: end },\r\n    }, 'endTime startTime kwh value');\r\n    const dates: Date[] = [];\r\n    const div = (end.getTime() - start.getTime()) / length;\r\n    for (let i = 0; i  {\r\n      value.endTime.setHours(value.endTime.getHours() + 5);\r\n      value.startTime.setHours(value.startTime.getHours() + 5);\r\n      return value.startTime;\r\n    });\r\n    let aux = 0;\r\n    for (let j = 0; j \n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/user/user.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(userModel: any, electrodomesticModel: any)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     create\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    create(user: IUser)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     login\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    login(user: IUser)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     findAll\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    findAll()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getElectrodomestics\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getElectrodomestics(idUser: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     addElectrodomestic\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    addElectrodomestic(idUser: any, idElectro: any, role: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     challengPassword\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    challengPassword(idUser: any, oldPassword: any, newPassword: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     emailExist\n                                \n                            \n            \n                            \n                                \n            emailExist(email: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     userExist\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    userExist(email: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getMeters\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getMeters(user: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getOne\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getOne(id: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Model } from 'mongoose';\r\nimport { HttpException, HttpStatus, Injectable } from '@nestjs/common';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport { IUser } from '../../interfaces/user.interface';\r\nimport { EncryptPipe } from '../../pipes/encrypt.pipe';\r\nimport * as bcrypt from 'bcrypt';\r\nimport { CustomException } from '../../utils/custom-exception';\r\n// @ts-ignore\r\nimport * as  emailExistence from 'email-existence';\r\nimport { UserSocketService } from '../user-socket/user-socket.service';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  // @ts-ignore\r\n\r\n  constructor(@InjectModel('User') private userModel: Model,\r\n              // @ts-ignore\r\n              @InjectModel('Electrodomestic') private electrodomesticModel: Model) {\r\n  }\r\n\r\n  async create(user: IUser): Promise {\r\n    user.password = new EncryptPipe().transform(user.password);\r\n    const createUser = new this.userModel(user);\r\n    return await createUser.save().catch(reason => {\r\n      CustomException.saveExceptio(reason);\r\n    });\r\n  }\r\n\r\n  async login(user: IUser) {\r\n    return new Promise((resolve, reject) => {\r\n      this.userModel.findOne({ email: user.email }, 'city email name password stratum', (err, res) => {\r\n        if (err) {\r\n          reject(new HttpException({\r\n            status: HttpStatus.INTERNAL_SERVER_ERROR,\r\n            error: err,\r\n          }, 400));\r\n        }\r\n        if (!res) {\r\n          reject(new HttpException({\r\n            status: HttpStatus.BAD_REQUEST,\r\n            error: 'Usuario o contraseña incorrecta',\r\n          }, 400));\r\n        } else {\r\n          if (!bcrypt.compareSync(user.password, res.password)) {\r\n            reject(new HttpException({\r\n              status: HttpStatus.UNAUTHORIZED,\r\n              error: 'Usuario o contraseña incorrecta',\r\n            }, 400));\r\n          }\r\n        }\r\n\r\n        resolve(res);\r\n      });\r\n    });\r\n  }\r\n\r\n  async findAll(): Promise {\r\n    return await this.userModel.find().exec();\r\n  }\r\n\r\n  async getElectrodomestics(idUser) {\r\n    const electros = await this.userModel.findOne({ _id: idUser })\r\n      .populate('electrodomestics.electrodomestic', 'name')\r\n      .exec();\r\n    return electros;\r\n  }\r\n\r\n  async addElectrodomestic(idUser, idElectro, role?) {\r\n    return await this.userModel.findOne({ _id: idUser }, (err, res) => {\r\n      res.electrodomestics.push({ electrodomestic: idElectro, role });\r\n      res.save();\r\n    });\r\n  }\r\n\r\n  async challengPassword(idUser, oldPassword, newPassword): Promise {\r\n    let w;\r\n    await this.userModel.findOne({ _id: idUser }, 'password', (err, res) => {\r\n      if (bcrypt.compareSync(oldPassword, res.password)) {\r\n        res.password = new EncryptPipe().transform(newPassword);\r\n        res.save().then(value => value);\r\n        w = true;\r\n      } else {\r\n        w = false;\r\n      }\r\n    });\r\n    return w;\r\n  }\r\n\r\n  emailExist(email): Promise {\r\n    return new Promise((resolve, reject) => {\r\n      emailExistence.check(email, (err, inf) => {\r\n        resolve(inf);\r\n      });\r\n    });\r\n  }\r\n\r\n  async userExist(email) {\r\n    return await this.userModel.findOne({ email }, 'email', (err, res) => {\r\n      return res;\r\n    });\r\n  }\r\n\r\n  async getMeters(user) {\r\n    let meters;\r\n    await this.userModel.findById(user, 'electrodomestics')\r\n      .populate('electrodomestic').then(async value => {\r\n        const idsElectro = value.electrodomestics.map((electro) => electro.electrodomestic);\r\n        const auxMeters = await this.electrodomesticModel.find({ _id: { $in: idsElectro } });\r\n        meters = auxMeters.map((item) => item.meter);\r\n      });\r\n\r\n    return meters;\r\n  }\r\n\r\n  async getOne(id) {\r\n    return await this.userModel.findById(id);\r\n  }\r\n}\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserSocketService.html":{"url":"injectables/UserSocketService.html","title":"injectable - UserSocketService","body":"\n                   \n\n\n\n\n\n  Injectables\n  UserSocketService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/user-socket/user-socket.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(socketUserModel: any, roomService: RoomService)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     addSession\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    addSession(user: string, idSession: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     deleteSession\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    deleteSession(idSession: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@nestjs/common';\r\nimport { Model } from 'mongoose';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport { RoomService } from '../room/room.service';\r\n\r\n@Injectable()\r\nexport class UserSocketService {\r\n  // @ts-ignore\r\n  constructor(@InjectModel('SocketUser') private socketUserModel: Model, private roomService: RoomService) {\r\n  }\r\n\r\n  async addSession(user: string, idSession: string) {\r\n    const newSession = await new this.socketUserModel({ sessionId: idSession, user });\r\n    newSession.save(async (err, res) => {\r\n      await this.roomService.createRoom({ user, name: user });\r\n    });\r\n  }\r\n\r\n  async deleteSession(idSession: string) {\r\n    await this.socketUserModel.findOneAndDelete({ sessionId: idSession })\r\n      .exec();\r\n  }\r\n}\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValueKwhService.html":{"url":"injectables/ValueKwhService.html","title":"injectable - ValueKwhService","body":"\n                   \n\n\n\n\n\n  Injectables\n  ValueKwhService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/value-kwh/value-kwh.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(valueKwhModel: any)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     register\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    register(values: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     get\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    get(stratum: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@nestjs/common';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport { model, Model } from 'mongoose';\r\n\r\n@Injectable()\r\nexport class ValueKwhService {\r\n  // @ts-ignore\r\n  constructor(@InjectModel('valueKwh') private valueKwhModel: Model) {\r\n  }\r\n\r\n  async register(values) {\r\n    return await new this.valueKwhModel(values).save();\r\n  }\r\n\r\n  async get(stratum) {\r\n    return await this.valueKwhModel.findOne({ stratum });\r\n  }\r\n}\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomException.html":{"url":"classes/CustomException.html","title":"class - CustomException","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  CustomException\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/custom-exception.ts\n        \n\n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                    Static getExecptio\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getExecptio(err: any, res: any, message: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Static internalError\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    internalError(error: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     HttpException\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Static noResults\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    noResults(message: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     HttpException\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Static clientError\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    clientError(message: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     HttpException\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Static saveExceptio\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    saveExceptio(err: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Static updateExceptio\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    updateExceptio(err: any, res: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                    Static serverError\n                                \n                            \n                            \n                                \n                                    serverError:     (err: any) => void\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\r\n\r\nexport class CustomException {\r\n\r\n  static serverError = (err) => {\r\n    if (err) {\r\n      throw new HttpException({\r\n        status: HttpStatus.INTERNAL_SERVER_ERROR,\r\n        error: err,\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  static getExecptio(err?: any, res?: any, message?: string) {\r\n    if (err) {\r\n      throw new HttpException({\r\n        status: HttpStatus.INTERNAL_SERVER_ERROR,\r\n        error: err,\r\n      }, 400);\r\n    }\r\n    if (!res) {\r\n      return Promise.reject(new HttpException({\r\n        status: HttpStatus.BAD_REQUEST,\r\n        error: message,\r\n      }, 400));\r\n    }\r\n  }\r\n\r\n  static internalError(error): HttpException {\r\n    return new HttpException({\r\n      error,\r\n    }, HttpStatus.INTERNAL_SERVER_ERROR);\r\n  }\r\n\r\n  static noResults(message: string): HttpException {\r\n    return new HttpException({\r\n      error: message,\r\n    }, HttpStatus.BAD_REQUEST);\r\n  }\r\n\r\n  static clientError(message): HttpException {\r\n    return new HttpException({\r\n      error: message,\r\n    }, HttpStatus.BAD_REQUEST);\r\n  }\r\n\r\n  static saveExceptio(err) {\r\n    if (err.name) {\r\n      throw new HttpException({\r\n        status: HttpStatus.FORBIDDEN,\r\n        error: err,\r\n      }, 403);\r\n    }\r\n    if (err) {\r\n      this.serverError(err);\r\n    }\r\n  }\r\n\r\n  static updateExceptio(err, res) {\r\n    if (err) {\r\n      throw new HttpException({\r\n        status: HttpStatus.FORBIDDEN,\r\n        error: err,\r\n      }, 403);\r\n    }\r\n    if (!res) {\r\n      throw new HttpException({\r\n        status: HttpStatus.FORBIDDEN,\r\n        error: 'No se ha encontrado',\r\n      }, 403);\r\n    }\r\n    if (err) {\r\n      this.serverError(err);\r\n    }\r\n  }\r\n\r\n}\r\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ElectrodomesticDto.html":{"url":"classes/ElectrodomesticDto.html","title":"class - ElectrodomesticDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  ElectrodomesticDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/electrodomestic.dto.ts\n        \n\n            \n                Description\n            \n            \n                Clase para representar un documento\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     _id\n                                \n                            \n                            \n                                \n                                    _id:     string\n            \n                                \n                            \n                            \n                                \n                                    id asignada por mongo \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     category\n                                \n                            \n                            \n                                \n                                    category:     string\n            \n                                \n                            \n                            \n                                \n                                    Categoria a la cual pertenece \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     meter\n                                \n                            \n                            \n                                \n                                    meter:     string\n            \n                                \n                            \n                            \n                                \n                                    id del medidor que le ha asignado el usuario \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     name\n                                \n                            \n                            \n                                \n                                    name:     string\n            \n                                \n                            \n                            \n                                \n                                    Nombre que le da el usuario \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     onOff\n                                \n                            \n                            \n                                \n                                    onOff:     boolean\n            \n                                \n                            \n                            \n                                \n                                    Estado el electrodomestico (encendido/ apagado) \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     serial\n                                \n                            \n                            \n                                \n                                    serial:     string\n            \n                                \n                            \n                            \n                                \n                                    Serial de fabrica \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     status\n                                \n                            \n                            \n                                \n                                    status:     boolean\n            \n                                \n                            \n                            \n                                \n                                    Estado dentro de la base de datos  \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     users\n                                \n                            \n                            \n                                \n                                    users:     string[]\n            \n                                \n                            \n                            \n                                \n                                    Usuarios que tienen acceso al electrodoméstico \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     voltage\n                                \n                            \n                            \n                                \n                                    voltage:     string\n            \n                                \n                            \n                            \n                                \n                                    Voltage de funcionamiento \n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { IDocument } from './IDocument';\r\n\r\n/**\r\n * Clase para representar un documento\r\n */\r\nexport class ElectrodomesticDto implements IDocument {\r\n\r\n  /** id asignada por mongo */\r\n  _id: string;\r\n\r\n  /** Serial de fabrica */\r\n  serial: string;\r\n\r\n  /** Nombre que le da el usuario */\r\n  name: string;\r\n\r\n  /** Categoria a la cual pertenece */\r\n  category: string;\r\n\r\n  /** Voltage de funcionamiento */\r\n  voltage: string;\r\n\r\n  /** Estado el electrodomestico (encendido/ apagado) */\r\n  onOff: boolean;\r\n\r\n  /** id del medidor que le ha asignado el usuario */\r\n  meter: string;\r\n\r\n  /** Usuarios que tienen acceso al electrodoméstico */\r\n  users: string[];\r\n\r\n  /** Estado dentro de la base de datos  */\r\n  status: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Roles que puede tener un usuario sobre un electrodoméstico\r\n */\r\nenum roles {\r\n  'ADMIN',\r\n  'USER',\r\n}\r\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JsonWebToken.html":{"url":"classes/JsonWebToken.html","title":"class - JsonWebToken","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  JsonWebToken\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/json-web-token.ts\n        \n\n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                    Static verify\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    verify(token: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n    \n    \n        import * as jwt from 'jsonwebtoken';\r\nimport { HttpException, HttpStatus } from '@nestjs/common';\r\n\r\nexport class JsonWebToken {\r\n static async verify(token: string): Promise {\r\n   return jwt.verify(token, process.env.SEED, (err, decoded) => {\r\n      if (err) {\r\n        throw new HttpException({\r\n          status: HttpStatus.UNAUTHORIZED,\r\n          error: 'Token no válido',\r\n        }, 401);\r\n      }\r\n      return decoded.user;\r\n    });\r\n  }\r\n}\r\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MeasurmentDto.html":{"url":"classes/MeasurmentDto.html","title":"class - MeasurmentDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  MeasurmentDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/measurment.dto.ts\n        \n\n            \n                Description\n            \n            \n                Clase para representar una medición\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     _id\n                                \n                            \n                            \n                                \n                                    _id:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     endTime\n                                \n                            \n                            \n                                \n                                    endTime:     Date\n            \n                                \n                            \n                            \n                                \n                                    Fecha y hora en la que se comenzó la medición \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     irms\n                                \n                            \n                            \n                                \n                                    irms:     number\n            \n                                \n                            \n                            \n                                \n                                    Corriente efectiva de la medición \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     kwh\n                                \n                            \n                            \n                                \n                                    kwh:     number\n            \n                                \n                            \n                            \n                                \n                                    kwh consumidos en la medición \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     meter\n                                \n                            \n                            \n                                \n                                    meter:     string\n            \n                                \n                            \n                            \n                                \n                                    Medidor que realizo la medición \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     startTime\n                                \n                            \n                            \n                                \n                                    startTime:     Date\n            \n                                \n                            \n                            \n                                \n                                    Fecha y hora en la que se comenzó la medición \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     status\n                                \n                            \n                            \n                                \n                                    status:     boolean\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     value\n                                \n                            \n                            \n                                \n                                    value:     number\n            \n                                \n                            \n                            \n                                \n                                    Costo monetario de la medición \n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { IDocument } from './IDocument';\r\n\r\n/**\r\n * Clase para representar una medición\r\n */\r\nexport class MeasurmentDto implements IDocument {\r\n  _id: string;\r\n\r\n  status: boolean;\r\n\r\n  /** Medidor que realizo la medición */\r\n  meter: string;\r\n\r\n  /** Corriente efectiva de la medición */\r\n  irms: number;\r\n  /** kwh consumidos en la medición */\r\n  kwh: number;\r\n\r\n  /** Costo monetario de la medición */\r\n  value: number;\r\n\r\n  /** Fecha y hora en la que se comenzó la medición */\r\n  startTime: Date;\r\n\r\n  /** Fecha y hora en la que se comenzó la medición */\r\n  endTime: Date;\r\n}\r\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MeterDto.html":{"url":"classes/MeterDto.html","title":"class - MeterDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  MeterDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/meter.dto.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     _id\n                                \n                            \n                            \n                                \n                                    _id:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     electrodomestic\n                                \n                            \n                            \n                                \n                                    electrodomestic:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     model\n                                \n                            \n                            \n                                \n                                    model:     models\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     serial\n                                \n                            \n                            \n                                \n                                    serial:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     status\n                                \n                            \n                            \n                                \n                                    status:     boolean\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { IDocument } from './IDocument';\r\n\r\nexport class MeterDto implements IDocument {\r\n  _id: string;\r\n  serial: string;\r\n  electrodomestic: string;\r\n  model: models;\r\n  status: boolean;\r\n}\r\n\r\nenum models {\r\n  'ACS712ELCTR-05B-T', 'ACS712ELCTR-20A-T', 'ACS712ELCTR-30A-T',\r\n}\r\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterDto.html":{"url":"classes/ParameterDto.html","title":"class - ParameterDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  ParameterDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/parameter.dto.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     _id\n                                \n                            \n                            \n                                \n                                    _id:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     kwh\n                                \n                            \n                            \n                                \n                                    kwh:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     money\n                                \n                            \n                            \n                                \n                                    money:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     scale\n                                \n                            \n                            \n                                \n                                    scale:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     user\n                                \n                            \n                            \n                                \n                                    user:     string\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { IDocument } from './IDocument';\r\n\r\nexport class ParameterDto implements IDocument {\r\n  user: string;\r\n  _id: string;\r\n  kwh: number;\r\n  money: number;\r\n  scale: string;\r\n}\r\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoomDto.html":{"url":"classes/RoomDto.html","title":"class - RoomDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  RoomDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/room.dto.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     _id\n                                \n                            \n                            \n                                \n                                    _id:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     name\n                                \n                            \n                            \n                                \n                                    name:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     user\n                                \n                            \n                            \n                                \n                                    user:     string\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { IDocument } from './IDocument';\r\n\r\nexport class RoomDto implements IDocument {\r\n  _id?: string;\r\n  user?: string;\r\n  name?: string;\r\n}\r\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/user.dto.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     _id\n                                \n                            \n                            \n                                \n                                    _id:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     city\n                                \n                            \n                            \n                                \n                                    city:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     electrodomestics\n                                \n                            \n                            \n                                \n                                    electrodomestics:     { electrodomestics: string; role: string; }[]\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     email\n                                \n                            \n                            \n                                \n                                    email:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     name\n                                \n                            \n                            \n                                \n                                    name:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     password\n                                \n                            \n                            \n                                \n                                    password:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     status\n                                \n                            \n                            \n                                \n                                    status:     boolean\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { IDocument } from './IDocument';\r\n\r\nexport class UserDto implements IDocument {\r\n  _id: string;\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n  city: string;\r\n  electrodomestics: Array;\r\n  status: boolean;\r\n\r\n}\r\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDocument.html":{"url":"interfaces/IDocument.html","title":"interface - IDocument","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  IDocument\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/IDocument.ts\n        \n\n            \n                Description\n            \n            \n                Representar un documento de la base de datos\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    id asignada por mongo \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    Estado del registro dentro de la base de datos \n\n                                \n                            \n                        \n                    \n            \n    \n    \n        export interface IDocument {\r\n  /** id asignada por mongo */\r\n  _id?: string;\r\n  /** Estado del registro dentro de la base de datos */\r\n  status?: boolean;\r\n}\r\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IElectrodomestic.html":{"url":"interfaces/IElectrodomestic.html","title":"interface - IElectrodomestic","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  IElectrodomestic\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/electrodomestic.interface.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        category\n                                    \n                                \n                                \n                                    \n                                        category:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        meter\n                                    \n                                \n                                \n                                    \n                                        meter:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        serial\n                                    \n                                \n                                \n                                    \n                                        serial:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        users\n                                    \n                                \n                                \n                                    \n                                        users:     [{ user: String; rol?: string; }]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [{ user: String; rol?: string; }]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        voltage\n                                    \n                                \n                                \n                                    \n                                        voltage:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { IUser } from './user.interface';\r\n\r\nexport interface IElectrodomestic {\r\n  _id?: string;\r\n  serial: string;\r\n  name: string;\r\n  category?: string;\r\n  voltage: number;\r\n  meter: string;\r\n  users?: [{user: String, rol?: string}];\r\n  status?: boolean;\r\n}\r\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMeasurment.html":{"url":"interfaces/IMeasurment.html","title":"interface - IMeasurment","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  IMeasurment\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/measurment.interface.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        endTime\n                                    \n                                \n                                \n                                    \n                                        endTime:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        interval\n                                    \n                                \n                                \n                                    \n                                        interval:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        irms\n                                    \n                                \n                                \n                                    \n                                        irms:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        kwh\n                                    \n                                \n                                \n                                    \n                                        kwh:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        meter\n                                    \n                                \n                                \n                                    \n                                        meter:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        export interface IMeasurment {\r\n  meter: string;\r\n  irms: number;\r\n  kwh: number;\r\n  value: number;\r\n  startTime: Date;\r\n  endTime: Date;\r\n  interval?: number;\r\n}\r\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMeter.html":{"url":"interfaces/IMeter.html","title":"interface - IMeter","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  IMeter\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/meter.interface.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        electrodomestic\n                                    \n                                \n                                \n                                    \n                                        electrodomestic:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        model\n                                    \n                                \n                                \n                                    \n                                        model:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        serial\n                                    \n                                \n                                \n                                    \n                                        serial:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        export interface IMeter {\r\n  _id: string;\r\n  serial: string;\r\n  electrodomestic: string;\r\n  model: string;\r\n  status?: boolean;\r\n}\r\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  IUser\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/user.interface.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        electrodomestics\n                                    \n                                \n                                \n                                    \n                                        electrodomestics:     [IElectrodomestic]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [IElectrodomestic]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { IElectrodomestic } from './electrodomestic.interface';\r\n\r\nexport enum Citys {\r\n  Medellín = 'Medellín',\r\n  Cali = 'Cali',\r\n  Bogota= 'Bogota',\r\n  Yarumal = 'Yarumal',\r\n  SantaRosa = 'Santa Rosa',\r\n  LaCeja = 'La Ceja',\r\n  RíoNegro = 'Río Negro',\r\n}\r\n\r\nexport interface IUser {\r\n  _id: string;\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n  city?: string;\r\n  electrodomestics?: [IElectrodomestic];\r\n  status?: boolean;\r\n}\r\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Model.html":{"url":"interfaces/Model.html","title":"interface - Model","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Model\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/model.interface.ts\n        \n\n\n\n\n    \n    \n        export interface Model {}\r\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserSocket.html":{"url":"interfaces/UserSocket.html","title":"interface - UserSocket","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  UserSocket\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/user-socket.interface.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        sessionId\n                                    \n                                \n                                \n                                    \n                                        sessionId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        export interface UserSocket {\r\n  sessionId: string;\r\n  user: string;\r\n}\r\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous.html":{"url":"miscellaneous.html","title":"miscellaneous - miscellaneous","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n\n\n    \n        Variables\n            \n                \n                    \n                        \n                             URLDB\n                        \n                    \n                    \n                        \n                            URLDB:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             CONTROLLERS\n                        \n                    \n                    \n                        \n                            CONTROLLERS:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             GATEWAYS\n                        \n                    \n                    \n                        \n                            GATEWAYS:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             categories\n                        \n                    \n                    \n                        \n                            categories:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             userTypes\n                        \n                    \n                    \n                        \n                            userTypes:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             ElectrodomesticSchema\n                        \n                    \n                    \n                        \n                            ElectrodomesticSchema:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             MODELS\n                        \n                    \n                    \n                        \n                            MODELS:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             MeasurementSchema\n                        \n                    \n                    \n                        \n                            MeasurementSchema:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             models\n                        \n                    \n                    \n                        \n                            models:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             MeterSchema\n                        \n                    \n                    \n                        \n                            MeterSchema:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             scales\n                        \n                    \n                    \n                        \n                            scales:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             ParameterSchema\n                        \n                    \n                    \n                        \n                            ParameterSchema:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             RoomSchema\n                        \n                    \n                    \n                        \n                            RoomSchema:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             SocketUserSchema\n                        \n                    \n                    \n                        \n                            SocketUserSchema:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             ciudades\n                        \n                    \n                    \n                        \n                            ciudades:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             roles\n                        \n                    \n                    \n                        \n                            roles:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             UserSchema\n                        \n                    \n                    \n                        \n                            UserSchema:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             ValueKwhSchema\n                        \n                    \n                    \n                        \n                            ValueKwhSchema:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             SERVICES\n                        \n                    \n                    \n                        \n                            SERVICES:     \n    \n                        \n                    \n                \n            \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage \n\n\n\n    Project\n    10%\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                src/app.service.ts\n            \n            \n                injectable\n            \n            \n                AppService\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/dto/IDocument.ts\n            \n            \n                interface\n            \n            \n                IDocument\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                src/dto/electrodomestic.dto.ts\n            \n            \n                classe\n            \n            \n                ElectrodomesticDto\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                src/dto/measurment.dto.ts\n            \n            \n                classe\n            \n            \n                MeasurmentDto\n            \n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                src/dto/meter.dto.ts\n            \n            \n                classe\n            \n            \n                MeterDto\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                src/dto/parameter.dto.ts\n            \n            \n                classe\n            \n            \n                ParameterDto\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                src/dto/room.dto.ts\n            \n            \n                classe\n            \n            \n                RoomDto\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/dto/user.dto.ts\n            \n            \n                classe\n            \n            \n                UserDto\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                src/interfaces/electrodomestic.interface.ts\n            \n            \n                interface\n            \n            \n                IElectrodomestic\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                src/interfaces/measurment.interface.ts\n            \n            \n                interface\n            \n            \n                IMeasurment\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                src/interfaces/meter.interface.ts\n            \n            \n                interface\n            \n            \n                IMeter\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                src/interfaces/model.interface.ts\n            \n            \n                interface\n            \n            \n                Model\n            \n            \n                0 %\n                (0/0)\n            \n        \n        \n            \n                src/interfaces/user-socket.interface.ts\n            \n            \n                interface\n            \n            \n                UserSocket\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/interfaces/user.interface.ts\n            \n            \n                interface\n            \n            \n                IUser\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                src/pipes/delete-blank-space.pipe.ts\n            \n            \n                injectable\n            \n            \n                DeleteBlankSpacePipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/pipes/encrypt.pipe.ts\n            \n            \n                injectable\n            \n            \n                EncryptPipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/services/electrodomestic/electrodomestic.service.ts\n            \n            \n                injectable\n            \n            \n                ElectrodomesticService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                src/services/measurment/measurement.service.ts\n            \n            \n                injectable\n            \n            \n                MeasurementService\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/services/meter/meter.service.ts\n            \n            \n                injectable\n            \n            \n                MeterService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                src/services/parameter/parameter.service.ts\n            \n            \n                injectable\n            \n            \n                ParameterService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/services/room/room.service.ts\n            \n            \n                injectable\n            \n            \n                RoomService\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/services/stats/stats.service.ts\n            \n            \n                injectable\n            \n            \n                StatsService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/services/user-socket/user-socket.service.ts\n            \n            \n                injectable\n            \n            \n                UserSocketService\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/services/user/user.service.ts\n            \n            \n                injectable\n            \n            \n                UserService\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                src/services/value-kwh/value-kwh.service.ts\n            \n            \n                injectable\n            \n            \n                ValueKwhService\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/utils/custom-exception.ts\n            \n            \n                classe\n            \n            \n                CustomException\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                src/utils/json-web-token.ts\n            \n            \n                classe\n            \n            \n                JsonWebToken\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
